[
    {
        "id": "cora_test_7678",
        "graph": {
            "node_idx": 7678,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    2,
                    3,
                    1,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    3,
                    3
                ]
            ],
            "node_list": [
                7678,
                9068,
                24524,
                7679
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: best probability of activation and performance comparisons for several designs of sparse distributed memoryreport r95:09 isrn : sics-r-95/09-se issn : 0283-3638 abstract the optimal probability of activation and the corresponding performance is studied for three designs of sparse distributed memory, namely, kanerva's original design, jaeckel's selected-coordinates design and karlsson's modifi - cation of jaeckel's design. we will assume that the hard locations (in karlsson's case, the masks), the storage addresses and the stored data are randomly chosen, and we will consider different levels of random noise in the reading address. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_7722",
        "graph": {
            "node_idx": 7722,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    8,
                    18,
                    9,
                    19,
                    20,
                    4,
                    21,
                    6,
                    22
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4
                ]
            ],
            "node_list": [
                7722,
                17846,
                1701,
                10068,
                7038,
                25061,
                22739,
                17155,
                10705,
                10054,
                5335,
                24594,
                5336,
                17002,
                7039,
                1702,
                22741,
                19046,
                17900,
                5082,
                9700,
                10713,
                7906
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a local learning algorithm for dynamic feedforward and recurrent networksmost known learning algorithms for dynamic neural networks in non-stationary environments need global computations to perform credit assignment. these algorithms either are not local in time or not local in space. those algorithms which are local in both time and space usually can not deal sensibly with `hidden units'. in contrast, as far as we can judge by now, learning rules in biological systems with many `hidden units' are local in both space and time. in this paper we propose a parallel on-line learning algorithm which performs local computations only, yet still is designed to deal with hidden units and with units whose past activations are `hidden in time'. the approach is inspired by holland's idea of the bucket brigade for classifier systems, which is transformed to run on a neural network with fixed topology. the result is a feedforward or recurrent `neural' dissipative system which is consuming `weight-substance' and permanently trying to distribute this substance onto its connections in an appropriate way. simple experiments demonstrating the feasability of the algorithm are reported. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8042",
        "graph": {
            "node_idx": 8042,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    5,
                    13
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    4
                ]
            ],
            "node_list": [
                8042,
                2542,
                9379,
                4826,
                10945,
                22441,
                24163,
                10549,
                855,
                12135,
                3642,
                5833,
                8917,
                8088
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: tempest: a substrate for portable parallel programsthis paper describes tempest, a collection of mechanisms for communication and synchronization in parallel programs. with these mechanisms, authors of compilers, libraries, and application programs can exploitacross a wide range of hardware platformsthe best of shared memory, message passing, and hybrid combinations of the two. because tempest provides mechanisms, not policies, programmers can tailor communication to a programs sharing pattern and semantics, rather than restructuring the program to run with the limited communication options offered by existing parallel machines. and since the mechanisms are easily supported on different machines, tempest provides a portable interface across platforms. this paper describes the tempest mechanisms, briey explains how they are used, outlines several implementations on both custom and stock hardware, and presents preliminary performance results that demonstrate the benefits of this approach. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_8066",
        "graph": {
            "node_idx": 8066,
            "edge_index": [
                [
                    1,
                    2,
                    3
                ],
                [
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                8066,
                7263,
                20133,
                17689
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: rochester connectionist simulatorspecifying, constructing and simulating structured connectionist networks requires significant programming effort. system tools can greatly reduce the effort required, and by providing a conceptual structure within which to work, make large and complex network simulations possible. the rochester connectionist simulator is a system tool designed to aid specification, construction and simulation of connectionist networks. this report describes this tool in detail: the facilities provided and how to use them, as well as details of the implementation. through this we hope not only to make designing and verifying connectionist networks easier, but also to encourage the development and refinement of connectionist research tools themselves. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8455",
        "graph": {
            "node_idx": 8455,
            "edge_index": [
                [
                    1,
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                8455,
                12438,
                20805,
                12440,
                12443,
                12413
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: replicability of neural computing experimentsif an experiment requires statistical analysis to establish a result, then one should do a better experiment. ernest rutherford, 1930 most proponents of cold fusion reporting excess heat from their electrolysis experiments were claiming that one of the main characteristics of cold fusion was its irreproducibility | j.r. huizenga, cold fusion, 1993, p. 78 abstract amid the ever increasing research into various aspects of neural computing, much progress is evident both from theoretical advances and from empirical studies. on the empirical side a wealth of data from experimental studies is being reported. it is, however, not clear how best to report neural computing experiments such that they may be replicated by other interested researchers. in particular, the nature of iterative learning on a randomised initial architecture, such as backpropagation training of a multilayer perceptron, is such that precise replication of a reported result is virtually impossible. the outcome is that experimental replication of reported results, a touchstone of \"the scientific method\", is not an option for researchers in this most popular subfield of neural computing. in this paper, we address this issue of replicability of experiments based on backpropagation training of multilayer perceptrons (although many of our results will be applicable to any other subfield that is plagued by the same characteristics). first, we attempt to produce a complete abstract specification of such a neural computing experiment. from this specification we identify the full range of parameters needed to support maximum replicability, and we use it to show why absolute replicability is not an option in practice. we propose a statistical framework to support replicability. we demonstrate this framework with some empirical studies of our own on both repli-cability with respect to experimental controls, and validity of implementations of the backpropagation algorithm. finally, we suggest how the degree of replicability of a neural computing experiment can be estimated and reflected in the claimed precision for any empirical results reported. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8476",
        "graph": {
            "node_idx": 8476,
            "edge_index": [
                [
                    0,
                    1,
                    2,
                    3
                ],
                [
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "node_list": [
                8476,
                623,
                24132,
                3528
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: efficient software synchronization on large cache coherent multiprocessorslarge-scale shared-memory multiprocessors typically have long latencies for remote data accesses. a key issue for execution performance of many common applications is the synchronization cost. the communication scalability of synchronization has been improved by the introduction of queue-based spin-locks instead of test&(test&set). for architectures with long access latencies for global data, attention should also be paid to the number of global accesses that are involved in synchronization. we present a method to characterize the performance of proposed queue lock algorithms, and apply it to previously published algorithms. we also present two new queue locks, the lh lock and the m lock. we compare the locks in terms of performance, memory requirements, code size, and required hardware support. the lh lock is the simplest of all the locks, yet requires only an atomic swap operation. the m lock is superior in terms of global accesses needed to perform synchronization and still competitive in all other criteria. we conclude that the m lock is the best overall queue lock for the class of architectures studied. fl currently with sun microsystems, work done while at sics. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_8488",
        "graph": {
            "node_idx": 8488,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    2,
                    3,
                    6
                ]
            ],
            "node_list": [
                8488,
                9083,
                12435,
                12743,
                19001,
                12434,
                3694,
                18125,
                23945,
                23974,
                19797,
                18416,
                20814,
                875,
                6687
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: predicting sunspots and exchange rates with connectionist networkswe investigate the effectiveness of connectionist networks for predicting the future continuation of temporal sequences. the problem of overfitting, particularly serious for short records of noisy data, is addressed by the method of weight-elimination: a term penalizing network complexity is added to the usual cost function in back-propagation. the ultimate goal is prediction accuracy. we analyze two time series. on the benchmark sunspot series, the networks outperform traditional statistical approaches. we show that the network performance does not deteriorate when there are more input units than needed. weight-elimination also manages to extract some part of the dynamics of the notoriously noisy currency exchange rates and makes the network solution interpretable. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8501",
        "graph": {
            "node_idx": 8501,
            "edge_index": [
                [
                    1,
                    0
                ],
                [
                    0,
                    1
                ]
            ],
            "node_list": [
                8501,
                9405
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: bayesian regression filters and the issue of priorswe propose a bayesian framework for regression problems, which covers areas which are usually dealt with by function approximation. an online learning algorithm is derived which solves regression problems with a kalman filter. its solution always improves with increasing model complexity, without the risk of over-fitting. in the infinite dimension limit it approaches the true bayesian posterior. the issues of prior selection and over-fitting are also discussed, showing that some of the commonly held beliefs are misleading. the practical implementation is summarised. simulations using 13 popular publicly available data sets are used to demonstrate the method and highlight important issues concerning the choice of priors. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8532",
        "graph": {
            "node_idx": 8532,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                8532
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: incremental learning of complex temporal patterns 11 technical report: osu-cisrc-6/95-tr30 abstract a neural model for temporal pattern generation is used and analyzed for training with multiple complex sequences in a sequential manner. the network exhibits some degree of interference when new sequences are acquired. it is proven that the model is capable of incrementally learning a finite number of complex sequences. the model is then evaluated with a large set of highly correlated sequences. while the number of intact sequences increases linearly with the number of previously acquired sequences, the amount of retraining due to interference appears to be independent of the size of existing memory. the model is extended to include a chunking network which detects repeated subsequences between and within sequences. the chunking mechanism substantially reduces the amount of retraining in sequential training. thus, the network investigated here constitutes an effective sequential memory. various aspects of such a memory are discussed at the end of the paper. 1 the work described in this paper was supported in part by the nsf grants iri-9211419, iri-9423312, and \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8604",
        "graph": {
            "node_idx": 8604,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    4,
                    12,
                    13,
                    14,
                    15,
                    16,
                    1,
                    2,
                    17,
                    4,
                    1,
                    2,
                    17,
                    4,
                    5,
                    18,
                    19,
                    20,
                    5
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4,
                    4,
                    4,
                    6,
                    6,
                    6,
                    6
                ]
            ],
            "node_list": [
                8604,
                2067,
                18310,
                2137,
                8603,
                21443,
                10425,
                545,
                17979,
                18013,
                2562,
                814,
                22081,
                10945,
                8088,
                1924,
                11000,
                6785,
                10426,
                11010,
                2795
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: using abstraction in explicitly parallel programsthis report is a revised version of the author's thesis, which was submitted to the department of electrical engineering and computer science on december 31, 1990 in partial fulfillment of the requirements for the degree of doctor of philosophy at the massachusetts institute of technology. the thesis was supervised by john v. guttag. the author's current address is the computer science division, university of california, berkeley, ca 94720. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_8652",
        "graph": {
            "node_idx": 8652,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                8652
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the functional transfer of knowledge for coronary artery disease diagnosisa distinction between two forms of task knowledge transfer, representational and functional, is reviewed followed by a discussion of mtl, a modified version of the multiple task learning (mtl) neural network method of functional transfer. the mtl method employs a separate learning rate, k , for each task output node k. k varies as a function of a measure of relatedness, r k , between the kth task and the primary task of interest. an mtl network is applied to a diagnostic domain of four levels of coronary artery disease. results of experiments demonstrate the ability of mtl to develop a predictive model for one level of disease which has superior diagnostic ability over models produced by either single task learning or standard multiple task learning. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8661",
        "graph": {
            "node_idx": 8661,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    9,
                    19
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "node_list": [
                8661,
                18201,
                6382,
                1968,
                17441,
                9692,
                6467,
                7683,
                19296,
                20147,
                13603,
                21601,
                7006,
                7378,
                16582,
                1661,
                19153,
                10958,
                24804,
                22909
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a survey of motion analysis from moving light displaysmotion-based recognition deals with the recognition of objects or motions directly from the motion information extracted from a sequence of images. there are two main steps in this approach. the first consists of finding an appropriate representation for the objects or motions, from the motion cues of the sequence, and then organize them into useful representations. the second step consists of the matching of some unknown input with a model. this paper provides a review of recent developments in motion-based recognition. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8676",
        "graph": {
            "node_idx": 8676,
            "edge_index": [
                [
                    1,
                    0,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                8676,
                7488,
                13959,
                10044,
                5656,
                9590,
                4813,
                21904,
                13958
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: moment filters for high precision computation of focus and stereomany low level visual computation problems such as focus, stereo, etc. can be formulated as problems of extracting one or more parameters of a non-stationary transformation between two images. because of the non-stationary nature, finite-width windows are widely used in various algorithms to extract spatially local information from images. while the choice of window width has a very profound impact on the quality of results of algorithms, there has been no quantitative way to measure or eliminate the negative effects of finite-width windows. to address this problem, we introduce a new set of filters, moment filters. due to their recursiveness in the fourier and spatial domains, these filters allow the effects of finite-width windows and foreshortening to be explicitly analyzed and eliminated. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8761",
        "graph": {
            "node_idx": 8761,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    3,
                    3,
                    6,
                    7
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    5,
                    5,
                    5
                ]
            ],
            "node_list": [
                8761,
                18242,
                11695,
                20268,
                21630,
                11696,
                14763,
                23303
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: resonance and the perception of musical metermany connectionist approaches to musical expectancy and music composition let the question of what next? overshadow the equally important question of when next?. one cannot escape the latter question, one of temporal structure, when considering the perception of musical meter. we view the perception of metrical structure as a dynamic process where the temporal organization of external musical events synchronizes, or entrains, a listeners internal processing mechanisms. this article introduces a novel connectionist unit, based upon a mathematical model of entrainment, capable of phase and frequency-locking to periodic components of incoming rhythmic patterns. networks of these units can self-organize temporally structured responses to rhythmic patterns. the resulting network behavior embodies the perception of metrical structure. the article concludes with a discussion of the implications of our approach for theories of metrical structure and musical expectancy. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_8778",
        "graph": {
            "node_idx": 8778,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    3
                ],
                [
                    0,
                    0,
                    0,
                    2
                ]
            ],
            "node_list": [
                8778,
                18248,
                9501,
                19935
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: nearest neighbor clutter removal for estimating features in spatial point processestechnical report no. 305 department of statistics university of washington 1 simon byers is graduate research assistant and adrian e. raftery is professor of statistics and sociology, both at the department of statistics, university of washington, box 354322, seattle, wa 98195-4322. e-mail: byers@stat.washington.edu and raftery@stat.washington.edu; web: http://www.stat.washington.edu/raftery. this research was supported by onr grant number n00014-96-1-0192. the authors are grateful to abhijit dasgupta, chris fraley and werner stuetzle for helpful discussions. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8811",
        "graph": {
            "node_idx": 8811,
            "edge_index": [
                [
                    1,
                    2
                ],
                [
                    0,
                    0
                ]
            ],
            "node_list": [
                8811,
                13794,
                20627
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: npsi adaptive synchronization algorithms for pdescomputer science report no. cs-94-44 issued nov. 8, 1994; revised april 6, 1995 \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_8854",
        "graph": {
            "node_idx": 8854,
            "edge_index": [
                [
                    1,
                    0
                ],
                [
                    0,
                    0
                ]
            ],
            "node_list": [
                8854,
                18289
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: matching and pose refinement with camera pose estimatesthis paper describes novel algorithms that use absolute camera pose information to identify correspondence among point features in hundreds or thousands of images. our incidence counting algorithm is a geometric approach to matching; it matches features by extruding them into an absolute 3-d coordinate system, then searching 3-d space for regions into which many features project. the absolute pose estimates reported by our instrumentation are accurate, but not perfect. thus, we also consider the problem of refining these pose estimates, given feature matches from a set of images. we describe a pose refinement algorithm which decouples translation (position) estimates from rotation (attitude) estimates, and can incorporate matches from many hundreds or thousands of images. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8867",
        "graph": {
            "node_idx": 8867,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    1,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    9,
                    13
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    4,
                    5
                ]
            ],
            "node_list": [
                8867,
                7684,
                8868,
                21584,
                13591,
                13583,
                17835,
                21516,
                5911,
                13640,
                7463,
                23338,
                23882,
                21587
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: parametrized structure from motion for 3d adaptive feedback tracking of facesmit media laboratory, perceptual computing technical report #401 submitted to cvpr november 1996 abstract a real-time system is described for automatically detecting, modeling and tracking faces in 3d. a closed loop approach is proposed which utilizes structure from motion to generate a 3d model of a face and then feed back the estimated structure to constrain feature tracking in the next frame. the system initializes by using skin classification, symmetry operations, 3d warping and eigenfaces to find a face. feature trajectories are then computed by ssd or correlation-based tracking. the trajectories are simultaneously processed by an extended kalman filter to stably recover 3d structure, camera geometry and facial pose. adaptively weighted estimation is used in this filter by modeling the noise characteristics of the 2d image patch tracking technique. in addition, the structural estimate is constrained by using parametrized models of facial structure (eigen-heads). the kalman filter's estimate of the 3d state and motion of the face predicts the trajectory of the features which constrains the search space for the next frame in the video sequence. the feature tracking and kalman filtering closed loop system operates at 30hz. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8917",
        "graph": {
            "node_idx": 8917,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                8917,
                18317
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: exploiting temporal and spatial constraints on distributed shared objectsthe advent of gigabit network technologies has made it possible to combine sets of uni- and multiprocessor workstations into a distributed, massively-parallel computer system. middleware, such as distributed shared objects (dso), attempts to improve programmability of such systems, by providing globally accessible 'object' abstractions. early research on distributed shared object systems concerned protocols to maintain consistency across replicated 'memory' objects. such systems are well suited to scientific applications but have limited support for multimedia or groupware applications. this paper addresses the state sharing needs of complex distributed applications with (1) high-frequency symmetric data accesses to shared objects, (2) unpredictable and limited locality of data access, (3) dynamically changing sharing behavior, and (4) potential data races. we show that a dso system that exploits application-level temporal and spatial constraints on shared objects can outperform shared object protocols which do not exploit application-level constraints. we describe the features of our s(emantic) dso and compare three application specific consistency protocols, developed to run on our system against entry consistency for a sample application having the four properties mentioned above. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_8940",
        "graph": {
            "node_idx": 8940,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                8940,
                5654,
                18753,
                17835,
                6117,
                17369,
                6118,
                14818,
                13593,
                18278,
                19963,
                22622
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: representing rigid and nonrigid motionm.i.t media laboratory perceptual computing section technical report no. 273 will appeared in proc. of the ieee workshop on nonrigid and articulate motion, austin, tx, nov. 1994. abstract nonrigid motion can be described as morphing or blending between extremal shapes, e.g., heart motion can be described as transitioning between the systole and diastole states. using physically-based modeling techniques, shape similarity can be measured in terms of forces and strain. this provides a physically-based coordinate system in which motion is characterized in terms of physical similarity to a set of extremal shapes. having such a low-dimensional characterization of nonrigid motion allows for the recognition and the comparison of different types of nonrigid motion. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8964",
        "graph": {
            "node_idx": 8964,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                8964,
                1320,
                20698,
                17445,
                1321,
                536,
                5911
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the role of fixation and visual attention in object recognitionthis research project is a study of the role of fixation and visual attention in object recognition. in this project, we build an active vision system which can recognize a target object in a cluttered scene efficiently and reliably. our system integrates visual cues like color and stereo to perform figure/ground separation, yielding candidate regions on which to focus attention. within each image region, we use stereo to extract features that lie within a narrow disparity range about the fixation position. these selected features are then used as input to an alignment-style recognition system. we show that visual attention and fixation significantly reduce the complexity and the false identifications in model-based recognition using alignment methods. we also demonstrate that stereo can be used effectively as a figure/ground separator without the need for accurate camera calibration. this report describes research done at the artificial intelligence laboratory of the massachusetts institute of technology. support for this research was provided in part by the advanced research projects agency of the department of defense under office of naval research contract n00014-94-01-0994 and afosr contract f49620-93-1-0604. the author was also supported by nsf-9407173-iri. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_8975",
        "graph": {
            "node_idx": 8975,
            "edge_index": [
                [
                    1,
                    0,
                    2,
                    3,
                    4
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1
                ]
            ],
            "node_list": [
                8975,
                11847,
                20639,
                20354,
                8827
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: learning string edit distancein many applications, it is necessary to determine the similarity of two strings. a widely-used notion of string similarity is the edit distance: the minimum number of insertions, deletions, and substitutions required to transform one string into the other. here we provide a stochastic model for string edit distance. our stochastic model allows us to learn the optimal string edit distance function from a corpus of examples. we illustrate the utility of our approach by applying it to the difficult problem of learning the pronunciation of words in conversational speech. in this application, we learn a string edit distance function with one third the error rate of the untrained levenshtein distance. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_9100",
        "graph": {
            "node_idx": 9100,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                9100,
                7626,
                9101,
                9102,
                7627,
                7625
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: on the direct determination of epipoles: a case study in algebraic methods for geometric problemswe study experimentaly the problem of computing the position of the epipoles in a pair of uncalibrated images. the approach, which is based on the definition of the epipolar transformation, exploits algebraic constraints obtained from point correspondences and provides a direct solution in which only the epipoles are involved. this is in opposition with the methods based on the computation of the fundamental matrix. in order to obtain a robust solution, three families of methods are successively considered: the first one uses statistics on closed-form solutions provided by the so-called sturm method, the second one finds the intersection of plane cubics by deterministic procedures, and the third one is based on non-linear minimizations of a difference of cross-ratios. we discuss the shortcomings of each of these and show, using numerous experimental comparisons, that a drastic improvement can be obtained. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_9102",
        "graph": {
            "node_idx": 9102,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    0,
                    2,
                    4,
                    3,
                    0,
                    1,
                    2,
                    4
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                9102,
                7626,
                7627,
                9101,
                7625
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: an experimental study of projective structure from motionthis paper studies the usefulness of the projective approach to structure from motion (sfm). we conduct an essentially algorithm-independent experimental comparison of projective versus euclidean reconstruction. our results show that euclidean reconstruction is essentially as accurate as projective reconstruction, even with significant calibration error and for the pure projective structure. thus calibration error is not a compelling motivation for the projective framework. but projective optimization is more reliable than its euclidean equivalent: we find that it has fewer problems with local minima. we describe several techniques that enhance the convergence of our levenberg-marquardt optimization algorithm. most importantly, we find that it is crucial to exploit the compactness of projective space|even in the pure euclidean framework. we also analyze the problem of determining a stable basis set of 5 points for projective reconstruction. keywords structure from motion, projective geometry, multi-frame structure from motion, optimization, levenberg-marquardt, calibration. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, vision and pattern recognition"
            }
        ]
    },
    {
        "id": "cora_test_9159",
        "graph": {
            "node_idx": 9159,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                [
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                9159,
                4911,
                21509,
                22629,
                4986,
                7882,
                24457,
                11057
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the sequoia 2000 architecture and implementation strategy for remote sensing and environmental opticssequoia 2000 technical report 93/23 university of california berkeley, ca 94720 \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_9161",
        "graph": {
            "node_idx": 9161,
            "edge_index": [
                [
                    1,
                    2,
                    0,
                    3,
                    1,
                    2,
                    4
                ],
                [
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                9161,
                18455,
                4618,
                4619,
                16173
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: differential learning leads to efficient neural network classifiers probabilistic learning strategy for neural network classifierswe outline a differential theory of learning for statistical pattern classification. when applied to neural networks, the theory leads to an efficient differential learning strategy based on classification figure-of-merit (cfm) objective functions [5]. differential learning guarantees the highest probability of generalization for a classifier with limited functional complexity, trained with a limited number of examples. the theory is significant for this and two other reasons: we demonstrate the importance of differential learning's efficiency with a simple pattern recognition task that lends itself to closed-form analysis. we conclude with a practical application of the theory in which a differentially trained perceptron diagnoses a crippling joint disorder from magnetic resonance images better than both its probabilistically trained counterpart and more complex probabilistically trained multi-layer perceptrons. the recent renaissance of connectionism has led to a considerable amount of research regarding generalization in neural network pattern classifiers that are trained in a supervised fashion. most of this research has been done by computational learning theorists and statisticians intent on matching the functional complexity of the classifier with the size of the training sample in order to avoid the well-known curse of dimensionality (see for example the work of barron, baum, haussler, and vapnik much of which is summarized in [8]). yet relatively little attention has been paid to the effect that the objective function (used to drive the supervised learning procedure) has on discrimination and generalization [6, 1, 5, 7, 2, 3]. fl copyright c fl1992 by j. b. hampshire ii and b. v. k. v. kumar: all rights reserved. copyright is automatically extended to ieee if this submission is accepted for presentation/publication. this research was funded by the air force office of scientific research (grant afosr-89-0551) and supported by a supercomputing grant from the national science foundation's pittsburgh supercomputing center (grant ccr920002p). the views and conclusions contained in this submission are the authors' and should not be interpreted as representing the official policies, either expressed or implied, of the u.s. air force, the national science foundation, or the u.s. government. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, neural networks"
            }
        ]
    },
    {
        "id": "cora_test_9206",
        "graph": {
            "node_idx": 9206,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    2,
                    7,
                    8,
                    6,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    17,
                    22,
                    14,
                    10,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4
                ]
            ],
            "node_list": [
                9206,
                9390,
                3779,
                5629,
                8302,
                21300,
                22863,
                20045,
                5626,
                22869,
                23702,
                21677,
                10348,
                22440,
                22420,
                14765,
                8411,
                16032,
                7924,
                4396,
                22082,
                16031,
                5627,
                8199,
                11422,
                20089,
                21065,
                22422,
                22423
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: managing multiple communication methods in high-performance networked computing systemsmodern networked computing environments and applications often require|or can benefit from|the use of multiple communication substrates, transport mechanisms, and protocols, chosen according to where communication is directed, what is communicated, or when communication is performed. we propose techniques that allow multiple communication methods to be supported transparently in a single application, with either automatic or user-specified selection criteria guiding the methods used for each communication. we explain how communication link and remote service request mechanisms facilitate the specification and implementation of multimethod communication. these mechanisms have been implemented in the nexus multithreaded runtime system, and we use this system to illustrate solutions to various problems that arise when implementing multimethod communication. we also illustrate the application of our techniques by describing a multimethod, multithreaded implementation of the message passing interface (mpi) standard, constructed by integrating nexus with the argonne mpich library. finally, we present the results of experimental studies that reveal performance characteristics of multimethod communication, the nexus-based mpi implementation, and a large scientific application running in a heterogeneous networked environment. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_9404",
        "graph": {
            "node_idx": 9404,
            "edge_index": [
                [
                    1,
                    2,
                    3
                ],
                [
                    0,
                    1,
                    1
                ]
            ],
            "node_list": [
                9404,
                278,
                3875,
                19047
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the impact of message traffic on multicomputer memory hierarchy performancemulticomputer cache performance is highly sensitive to interprocessor message traffic. the widening gap between microprocessor speeds and primary memory latencies means slight increases in cache miss rate can have a severe impact on application performance. it is therefore critical to reduce cache misses. while there are a number of factors that may contribute to an increase in cache misses, of particular concern is multicomputer message traffic. in this paper, we examine the extent to which handling message traffic increases cache misses. using register-transfer-level trace-based simulators of two representative multicomputer nodes, we performed extensive tests (over 70 billion memory references) with a variety of system configurations. our results indicate that message traffic has a tremendous impact on multicomputer node performance. a paragon-style multicomputer with a 16 kilobyte (kb) cache that processes an average of one word of message data per 50 clock periods can be expected to observe up to 20% more misses on a given application than a similarly-configured uniprocessor. furthermore, increasing the cache size increases the importance of messaging. for example, doubling the cache size from 16kb to 32kb decreases cache misses by 55% for one application on a uniprocessor but by only 35% on a cm-5-style multicomputer. finally, we show that control and data messages (i.e. short and long messages) have different effects on the cache. we quantify the regions of message length space in which each multicomputer node architecture performs best. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_9413",
        "graph": {
            "node_idx": 9413,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                9413,
                1487,
                553,
                2577,
                5071,
                23892,
                12542
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: informing loads: enabling software to observe and react to memory behaviorthis research has been supported by arpa contract dabt63-94-c-0054. in addition, margaret martonosi is supported in part by a national science foundation career award (ccr-9502516). todd c. mowry is supported by a research grant from the natural sciences and engineering research council of canada. michael d. smith is supported by the national science foundation under a young investigator grant no. ccr-9457779. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_9447",
        "graph": {
            "node_idx": 9447,
            "edge_index": [
                [
                    1,
                    0,
                    1,
                    2
                ],
                [
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                9447,
                1095,
                24837
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a dvsm server for meshixthis report describes the implementation of distributed virtual shared memory (dvsm) on the topsy multicomputer. the topsy machine is a distributed memory multiprocessor based on mc68030 nodes connected by a custom circuit-switched mesh interconnection network (meshnet), and runs the meshix operating system which is unix system v compatible. the dvsm allows distributed processes to share a paged virtual memory region, whose coherence is maintained by user-level servers using the dynamic distributed manager algorithm. the dvsm implementation is described at the user, server and kernel level, and an overview of the relevant parts of the meshix operating systems is also given. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_9564",
        "graph": {
            "node_idx": 9564,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    4,
                    12,
                    13,
                    14,
                    15,
                    16,
                    11,
                    13,
                    5,
                    17,
                    18,
                    15,
                    13,
                    19,
                    11,
                    5,
                    20,
                    6,
                    7,
                    8,
                    21
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    5,
                    6,
                    6,
                    6,
                    6,
                    6,
                    6,
                    6,
                    6
                ]
            ],
            "node_list": [
                9564,
                878,
                2737,
                19430,
                12160,
                12170,
                10166,
                21708,
                21709,
                7141,
                12164,
                12166,
                12174,
                20609,
                12171,
                20612,
                16679,
                12168,
                12172,
                1200,
                12163,
                13725
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: paging tradeoffs in distributed-shared-memory multiprocessorsmassively parallel processors have begun using commodity operating systems that support demand-paged virtual memory. to evaluate the utility of virtual memory, we measured the behavior of seven shared-memory parallel application programs on a simulated distributed-shared-memory machine. our results (i) confirm the importance of gang cpu scheduling, (ii) show that a page-faulting processor should spin rather than invoke a parallel context switch, (iii) show that our parallel programs frequently touch most of their data, and (iv) indicate that memory, not just cpus, must be \"gang scheduled\". overall, our experiments demonstrate that demand paging has limited value on current parallel machines because of the applications' synchronization and memory reference patterns and the machines' high page-fault and parallel-context-switch overheads. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_9621",
        "graph": {
            "node_idx": 9621,
            "edge_index": [
                [
                    1,
                    0,
                    2,
                    3,
                    0
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                9621,
                11302,
                11304,
                20049
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: detecting global predicates in distributed systems with clocksthis paper proposes a framework for predicate detection in systems of processes with approximately-synchronized real-time clocks. timestamps from these clocks are used to define two orderings on events: \"definitely occurred before\" and \"possibly occurred before\". these orderings lead naturally to definitions of 3 distinct detection modalities, i.e., 3 meanings of \"predicate held during a computation\", namely: poss t (\" possibly held\"), def t (\" definitely held\"), and inst (\" definitely held at a specific instant\"). this paper defines these modalities and gives efficient algorithms for detecting them; the algorithms are based on algorithms of cooper and marzullo, garg and waldecker, and fromentin and raynal. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_9737",
        "graph": {
            "node_idx": 9737,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                9737,
                4141,
                1901,
                5277,
                11686,
                4688,
                11682,
                4941,
                5276,
                17895,
                5278,
                22275,
                11687,
                5713,
                19657,
                8036,
                25116,
                20964,
                6213,
                19267,
                22052,
                14664,
                23533
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: wit: an infrastructure for wireless palmtop computingwit is a system infrastructure that supports wireless connection of palmtop computers to a wired local area network (lan). the system includes a primitive windowing system, non-preemptive threads, reliable and unreliable connections, and a tcl interpreter[ouster94] that allows applications to dynamically extend the palmtop system and user interface by downloading sequences of tcl code. together, these services provide an environment for exploring issues in mobile computing for small devices by supporting a wide range of solutions for hiding low bandwidth constraints, and permitting disconnected operation through local execution of application functions. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_9849",
        "graph": {
            "node_idx": 9849,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                9849
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: on parallel architectures and compilation techniques optimally synchronizing doacross loops on shared memory multiprocessorswe present two algorithms to minimize the amount of synchronization added when parallelizing a loop with loop-carried dependences. in contrast to existing schemes, our algorithms add lesser synchronization, while preserving the parallelism that can be extracted from the loop. our first algorithm uses an interval graph representation of the dependence \"overlap\" to find a synchronization placement in time almost linear in the number of dependences. although this solution may be suboptimal, it is still better than that obtained using existing methods, which first eliminate redundant dependences and then synchronize the remaining ones. determining the optimal synchronization is an np-complete problem. our second algorithm therefore uses integer programming to determine the optimal solution. we first use a polynomial-time algorithm to find a minimal search space that must contain the optimal solution. then, we formulate the problem of choosing the minimal synchronization from the search space as a set-cover problem, and solve it exactly using 0-1 integer programming. we show the performance impact of our algorithms by synchronizing a set of synthetic loops on an 8-processor convex exemplar. the greedily synchronized loops ran between 7% and 22% faster than those synchronized by the best existing algorithm. relative to the same base, the optimally synchronized loops ran between 10% and 22% faster. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, memory management"
            }
        ]
    },
    {
        "id": "cora_test_9959",
        "graph": {
            "node_idx": 9959,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    5,
                    12,
                    8,
                    9,
                    2,
                    13,
                    3,
                    14,
                    15,
                    16,
                    3,
                    5,
                    17,
                    10,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    3,
                    17,
                    24,
                    2,
                    1,
                    5,
                    17,
                    12
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4,
                    4,
                    4,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    7,
                    7,
                    7,
                    7,
                    7,
                    8
                ]
            ],
            "node_list": [
                9959,
                13444,
                9960,
                6782,
                11148,
                1935,
                21485,
                3930,
                13446,
                21543,
                24035,
                13447,
                7564,
                5606,
                11330,
                11327,
                19996,
                13443,
                2861,
                11522,
                1936,
                2386,
                12707,
                15188,
                6212
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: competitive distributed file allocationthis paper deals with the file allocation problem [bfr92] concerning the dynamic optimization of communication costs to access data in a distributed environment. we develop a dynamic file re-allocation strategy that adapts on-line to a sequence of read and write requests whose location and relative frequencies are completely unpredictable. this is achieved by replicating the file in response to read requests and migrating the file in response to write requests while paying the associated communications costs, so as to be closer to processors that access it frequently. we develop first explicit deterministic on-line strategy assuming existence of global information about the state of the network; previous (deterministic) solutions were complicated and more expensive. our solution has (optimal) logarithmic competitive ratio. the paper also contains the first explicit deterministic data migration [bs89] algorithm achieving the best known competitive ratio for this problem. using somewhat different technique, we also develop the first deterministic distributed file allocation algorithm (using only local information) with poly-logarithmic competitive ratio against a globally-optimized optimal prescient strategy. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_10042",
        "graph": {
            "node_idx": 10042,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                10042,
                19025
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: events in an rpc based distributed systemin this report, we show how to build a distributed system allowing objects to register interest in and receive notifications of events in other objects. the system is built on top of a pair of interfaces that are interesting only in their extreme simplicity. we then present a simple and efficient implementation of these interfaces. next, we show how more complex functionality can be introduced to the system by adding third-party services. these services can be added without changing the simple interfaces, and without changing the objects in the system that do not need the functionality of those services. finally, we note a number of open issues that remain, and attempt to draw some conclusions based on the work. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_10172",
        "graph": {
            "node_idx": 10172,
            "edge_index": [
                [
                    1,
                    2,
                    3
                ],
                [
                    0,
                    0,
                    2
                ]
            ],
            "node_list": [
                10172,
                19768,
                14364,
                12703
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: how to program in ccspccsp (c-csp) provides an execution environment for csp programs. ccsp consists of two parts, a parser and a run-time system using berkeley sockets. the parser takes a csp program as input and produces a c program as output. these c programs are then run as individual processes on a network of unix workstations. ccsp's run-time system contains procedures for operationally evaluating globally-specified axiomatic assertions embedded in the ccsp programs. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_10966",
        "graph": {
            "node_idx": 10966,
            "edge_index": [
                [
                    0
                ],
                [
                    0
                ]
            ],
            "node_list": [
                10966
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a transactional memory service in an extensible operating systemthis paper describes rhino, a transactional memory service implemented on top of the spin operating system. rhino is implemented as an extension that runs in spin kernel's address space. we discuss how the extension structure of rhino can solve performance problems previously unavoidable in traditional systems, and we quantify its benefits. we also introduce three alternative buffer management schemes and study their performance under various workloads. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_11640",
        "graph": {
            "node_idx": 11640,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    1,
                    2,
                    7
                ],
                [
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                11640,
                20234,
                4273,
                704,
                1056,
                24408,
                14761,
                23068
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: simplifying polynomial constraints over integers to make dependence analysis more precisewhy do existing parallelizing compilers and environments fail to parallelize many realistic fortran programs? one of the reasons is that these programs contain a number of linearized array references, such as a(m*n*i+n*j+k) or a(i*(i+1)/2+j). performing exact dependence analysis for these references requires testing polynomial constraints for integer solutions. most existing dependence analysis systems, however, restrict themselves to solving affine constraints only, so they have to make worst-case assumptions whenever they encounter a polynomial constraint. in this paper we introduce an algorithm which exactly and efficiently solves a class of polynomial constraints which arise in dependence testing. another important application of our algorithm is to generate code for loop transformation known as symbolic blocking (tiling). \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_11868",
        "graph": {
            "node_idx": 11868,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    0,
                    10,
                    11
                ],
                [
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                11868,
                20365,
                2826,
                15806,
                3523,
                10413,
                3286,
                4907,
                3304,
                2829,
                11870,
                11869
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: formalizing dependency directed backtracking and explanation based learning in refinement searchthe ideas of dependency directed backtracking (ddb) and explanation based learning (ebl) have developed independently in constraint satisfaction, planning and problem solving communities. in this paper, i formalize and unify these ideas under the task-independent framework of refinement search, which can model the search strategies used in both planning and constraint satisfaction. i show that both ddb and ebl depend upon the common theory of explaining search failures, and regressing them to higher levels of the search tree. the relevant issues of importance include (a) how the failures are explained and (b) how many failure explanations are remembered. this task-independent understanding of ddb and ebl helps support cross-fertilization of ideas among constraint satisfaction, planning and explanation-based learning communities. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_11918",
        "graph": {
            "node_idx": 11918,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                11918,
                21652
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: kantra a natural language interface for intelligent robotsthe future use of advanced technical systems, for example robots in the area of service and maintenance, will lead to high demands for interaction between man-machine and machine-man to make these systems more easily accessible for human operators. on that account, natural language could be an efficient means to use robots in a more flexible manner. first, it is possible to convey information in a varying degree of condensation, on the other hand, communication can be performed on different levels of abstraction in an application-specific way. in order to fully exploit the capabilities of a natural language access, a dialogue-based approach will be used. in this article, we want to report about the joint efforts of the university of karlsruhe and the university of the saarland in providing natural language access to the autonomous mobile two-arm robot kamro which is being developed at ipr. a closer view at the description of the interface architecture will be given. it is documented how the integration of the man-machine interface into the control architecture of the robot should be performed in order to supply access to all internal information and models that are necessary for an autonomous behaviour. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_12053",
        "graph": {
            "node_idx": 12053,
            "edge_index": [
                [
                    1,
                    1
                ],
                [
                    0,
                    1
                ]
            ],
            "node_list": [
                12053,
                12052
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a cooperative repair method for a distributed scheduling systemfor some time, we have been studying the issues involved in job-shop scheduling in an environment of cooperative distributed agents, none of which has a complete view of the resources available, or of the tasks to be scheduled. schedules produced cooperatively by such distributed agents using constraint satisfaction methods are often not optimal because of the inherent asyn-chronicity of the distributed scheduling process, the bounded rationality of the scheduling agents, and the difficulty in completely integrating meta-level heuristics into an agent's local scheduling processes. this paper describes a modification to distributed scheduling in which the loosely coupled distributed processing methods are supplemented with a tightly coupled parallel repair process. we explore the implications on the repair process of a distributed environment in which the designer of the repair algorithm must address issues of agent communication and organization. we describe a search algorithm and a set of heuristics for guiding the repair process and present some experimental results in the context of the distributed arm, an airline resource scheduling system. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_12180",
        "graph": {
            "node_idx": 12180,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    1,
                    6,
                    7,
                    8
                ],
                [
                    0,
                    0,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                12180,
                14353,
                10262,
                22279,
                9615,
                11166,
                20617,
                14301,
                22278
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a simple solver for linear equations containing nonlinear operatorsthis paper presents a simple equation solver. the solver finds solutions for sets of linear equations extended with several nonlinear operators, including integer division and modulus, sign extension, and bit slicing. the solver uses a new technique called balancing, which can eliminate some nonlinear operators from a set of equations before applying gaussian elimination. the solver's principal advantages are its simplicity and its ability to handle some nonlinear operators, including nonlinear functions of more than one variable. the solver is part of an application generator that provides encoding and decoding of machine instructions based on equational specifications. the solver is presented not as pseudo code but as a literate program, which guarantees that the code shown in the paper is the same code that is actually used. using real code exposes more detail than using pseudocode, but literate-programming techniques help manage the detail. the detail should benefit readers who want to implement their own solvers based on the techniques presented here. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_12197",
        "graph": {
            "node_idx": 12197,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    1,
                    9,
                    10,
                    11
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    2,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4,
                    4
                ]
            ],
            "node_list": [
                12197,
                14357,
                12208,
                25082,
                2710,
                12203,
                16675,
                24658,
                14353,
                25081,
                14352,
                22278
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the advantages of machinedependent global optimizationusing an intermediate language is a well-known, effective technique for constructing interpreters and compilers. the use of an intermediate language forces a structure on the organization of the compiler. the front end translates the source code to semantically equivalent intermediate language. the back end processes the intermediate language and produces target machine code. the choice of an intermediate language for use in an optimizing compiler is a key design decision. the intermediate language affects the source languages that can be handled, the types of and effectiveness of the code improvements done, and the ease of target machine code generation. this paper describes experience with a retargetable, optimizing compilation system that is centered around the use of two intermediate representations: one relatively high level, the other a low level corresponding to target machine instructions. the high-level intermediate language (hil) models a stack-based, hypothetical risc machine. the low-level intermediate language (lil) models target machines at the instructionset architecture level. all code improvements are applied to the lil representation of a program. this is motivated by the observation that most all optimizations are machine dependent, and the few that are truly machine independent interact with the machinedependent ones. this paper describes several machine-independent code improvements and shows that they are actually machine dependent. to illustrate how code improvements can be applied to a lil, an algorithm for induction variable elimination is presented. while the algorithm operates on a lil, the algorithm is itself largely machine independent. it is demonstrated that this algorithm yields better code than traditional implementations that are applied machine-independently to a high-level representation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_12291",
        "graph": {
            "node_idx": 12291,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                12291
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a self-learning controller for monocular graspinga method is presented to learn 3d grasping of objects with unknown dimensions using a monocular eye-in-hand manipulator. from a sequence of images a motion profile is generated to approach the object of unknown size. it is shown that monocular visual information suffices to control the deceleration of the robot manipulator. a strategy for generating learning samples is presented, and simulation results demonstrate the effectiveness of the method. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_12431",
        "graph": {
            "node_idx": 12431,
            "edge_index": [
                [
                    1,
                    1,
                    0
                ],
                [
                    0,
                    1,
                    1
                ]
            ],
            "node_list": [
                12431,
                12430
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a robot programming environment based on free-form cad modelling.this paper presents the mathematical and computational foundations of a robot programming environment embedded within a cad system. the key ideas behind this system is that it will work offline, it will allow a high-level of task abstraction and it will be usable by designers and engineers who have a good knowledge of the desired task but only a basic grounding in robot engineering. in this paper we begin with a discussion of how robot workspace can be modelled using free-form cad design concepts. the core of the paper is concerned with the application of these to well known problems of collision detection and path planning, showing how algorithms developed in cad can be applied to these new problem-areas in an efficient way. in the closing section we use these ideas to consider the development of new, graphically-based, robot programming systems. much work has been carried out on designing systems which attempt to simplify the process of robotic automation, making it easier for a robot programmer to prepare a robot to carry out a task. the important aspects of such automation are that it much work off-line, allowing programs to be prepared whilst the robot is engaged on another task, and that it must work at a high-level of abstractionthe intelligence about the fine detail of the robot's mechanics needs to be kept within the machine, liberating the designer to work on the task design not the fine-details of the programming. if this work is to find its way into industrial practice, then it must be grounded in techniques which are currently used in industry, so that skills learned in other industrial design fields can be transferred to robot programming. our perspective here is to incorporate robot modelling into computer-aided design systems, and to represent the complicated geometry of the workspaces by trimmed b-spline curves and surfaces and generalizations thereof. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_12453",
        "graph": {
            "node_idx": 12453,
            "edge_index": [
                [
                    1,
                    2,
                    1
                ],
                [
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                12453,
                12452,
                20823
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: self regenerative markov chain monte carlo summarywe propose a new method of construction of markov chains with a given stationary distribution . this method is based on construction of an auxiliary chain with some other stationary distribution and picking elements of this auxiliary chain a suitable number of times. the proposed method has many advantages over its rivals. it is easy to implement; it provides a simple analysis; it can be faster and more efficient than the currently available techniques and it can also be adapted during the course of the simulation. we make theoretical and numerical comparisons of the characteristics of the proposed algorithm with some other mcmc techniques. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12465",
        "graph": {
            "node_idx": 12465,
            "edge_index": [
                [
                    1,
                    2,
                    2
                ],
                [
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                12465,
                12415,
                20818
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the simulated likelihood ratio (slr) methodresume. une methode de simulation fondee sur des techniques d'echantil-lonage d'importance, de gibbs et metropolis-hastings permet d'approcher le rapport de la vraisemblance en deux valeurs du parametre, et donc l'estimateur du maximum de vraisemblance, dans le cadre general des mod-eles dynamiques avec variables latentes. cette classe contient comme cas particuliers les modeles a facteurs, les modeles a changements de regimes, les modeles a variable dependante limitee dynamiques, les modeles a volatilite stochastique et les modeles en temps continu discretises. abstract. a simulation method based on importance sampling, gibbs and metropolis-hastings techniques allows to approximate the ratio between the likelihood function computed for two different parameter values. thus it is possible to approximate the maximum likelihood estimator in the general framework of dynamic latent variable models. some examples of this class of models are factor models, switching regime models, dynamic limited dependent variable models, stochastic volatility models and discretised continuous time models. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12473",
        "graph": {
            "node_idx": 12473,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                12473
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: applications and extensions of mcmc in irt: multiple item types, missing data, and rated responsestechnical report no. 670 december, 1997 \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12474",
        "graph": {
            "node_idx": 12474,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                12474,
                1010,
                18846,
                255,
                10832,
                13106,
                656,
                13108,
                20807,
                13107,
                21220,
                23824
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: rate of convergence of the gibbs sampler by gaussian approximation summaryin this article we approximate the rate of convergence of the gibbs sampler by a normal approximation of the target distribution. based on this approximation, we consider many implementational issues for the gibbs sampler, e.g., updating strategy, parameterization and blocking. we give theoretical results to justify our approximation and illustrate our methods in a number of realistic examples. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12534",
        "graph": {
            "node_idx": 12534,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    3,
                    6,
                    10,
                    11,
                    12,
                    9,
                    13,
                    4,
                    5,
                    14,
                    10,
                    15,
                    16,
                    8,
                    9,
                    17,
                    18,
                    8,
                    4,
                    15,
                    7,
                    15
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4,
                    4,
                    5,
                    5,
                    5,
                    5,
                    7
                ]
            ],
            "node_list": [
                12534,
                20869,
                8256,
                5247,
                8248,
                8257,
                21304,
                11425,
                18036,
                7768,
                13271,
                17127,
                8255,
                11415,
                20516,
                21306,
                7138,
                11639,
                13269
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: from bayesian networks to causal networksthis paper demonstrates the use of graphs as a mathematical tool for expressing independencies, and as a formal language for communicating and processing causal information for decision analysis. we show how complex information about external interventions can be organized and represented graphically and, conversely, how the graphical representation can be used to facilitate quantitative predictions of the effects of interventions. we first review the theory of bayesian networks and show that directed acyclic graphs (dags) offer an economical scheme for representing conditional independence assumptions and for deducing and displaying all the logical consequences of such assumptions. we then introduce the manipulative account of causation and show that any dag defines a simple transformation which tells us how the probability distribution will change as a result of external interventions in the system. using this transformation it is possible to quantify, from non-experimental data, the effects of external interventions and to specify conditions under which randomized experiments are not necessary. as an example, we show how the effect of smoking on lung cancer can be quantified from non-experimental data, using a minimal set of qualitative assumptions. finally, the paper offers a graphical interpretation for rubin's model of causal effects, and demonstrates its equivalence to the manipulative account of causation. we exemplify the tradeoffs between the two approaches by deriving nonparametric bounds on treatment effects under conditions of imperfect compliance. fl portions of this paper were presented at the 49th session of the international statistical institute, florence, italy, august 25 - september 3, 1993. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12536",
        "graph": {
            "node_idx": 12536,
            "edge_index": [
                [
                    1,
                    0,
                    2,
                    0
                ],
                [
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                12536,
                12540,
                20998
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: value profilingin this paper we examine the invariance found from profiling instruction values, and show that many instructions have semi-invariant values even across different inputs. we also investigate the ability to estimate the invari-ance for all instructions in a program from only profiling load instructions. in addition, we propose a new type of profiling called convergent profiling. estimating the in-variance from loads and convergent profiling are used to reduce the profiling time needed to generate an accurate value profile. the value profile can then be used to automatically guide code generation for dynamic compilation, adaptive execution, code specialization, partial evaluation and other compiler optimizations. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_12672",
        "graph": {
            "node_idx": 12672,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    2,
                    3,
                    11,
                    12,
                    13,
                    14,
                    15
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4,
                    4
                ]
            ],
            "node_list": [
                12672,
                1328,
                20932,
                12673,
                14220,
                2164,
                19445,
                12221,
                10584,
                3775,
                12624,
                22878,
                12677,
                22165,
                22167,
                12183
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: on-demand asynchronous atomic broadcastwe propose a new asynchronous atomic broadcast protocol that provides good performance for applications with bursty update patters. if the members of a process group disseminate bursts of updates that tend to be disjoint in time, our protocol uses a small number of physical messages to accomplish a broadcast, and provides excellent update delivery and stability times. the protocol is tolerant of omission/performance communication failures and crash/performance process failures. the initial performance measurements made for a portable implementation on top of the udp data-gram service confirm the suitability of the protocol for bursty update dissemination patterns. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_12777",
        "graph": {
            "node_idx": 12777,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    0,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                12777,
                8831,
                2797,
                23107,
                23108
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: buying time for resource-bounded planning1 to appear in the aaai-97 workshop: building resource-bounded reasoning systems technical report. abstract to react appropriately in hard real-time environments, a system must either employ fast dynamic planning or recall a pre-built reactive response. for complex problems, real-time, accurate dynamic planning may be impossible, and the complete set of possible reactions may be too large to build and store in advance. in this paper, we propose combining offline and online planning such that a set of offline plans are built and stored to maximize the amount of time available for any subsequent online planning. we explore this concept in circa, the cooperative intelligent real-time control architecture, which has concentrated on guaranteeing failure avoidance via a combination of planning, scheduling, and real-time plan execution. we are in the process of implementing a plan cache which will increase circas overall likelihood of success in time-constrained situations, and we illustrate potential gains from these modifications using a simple example from the fully-automated aircraft domain. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_12819",
        "graph": {
            "node_idx": 12819,
            "edge_index": [
                [
                    1,
                    2,
                    3
                ],
                [
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                12819,
                14630,
                21029,
                22480
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: representing aggregate belief through the competitive equilibrium of a securities marketwe consider the problem of belief aggregation: given a group of individual agents with probabilistic beliefs over a set of of uncertain events, formulate a sensible consensus or aggregate probability distribution over these events. researchers have proposed many aggregation methods, although on the question of which is best the general consensus is that there is no consensus. we develop a market-based approach to this problem, where agents bet on uncertain events by buying or selling securities contingent on their outcomes. each agent acts in the market so as to maximize expected utility at given securities prices, limited in its activity only by its own risk aversion. the equilibrium prices of goods in this market represent aggregate beliefs. for agents with constant risk aversion, we demonstrate that the aggregate probability exhibits several desirable properties, and is related to independently motivated techniques. we argue that the market-based approach provides a plausible mechanism for belief aggregation in multiagent systems, as it directly addresses self-motivated agent incentives for participation and for truthfulness, and can provide a decision-theoretic foundation for the \"expert weights\" often employed in centralized pooling techniques. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12828",
        "graph": {
            "node_idx": 12828,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                12828,
                12857
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the role of development in genetic algorithmstechnical report number cs94-394 computer science and engineering, u.c.s.d. abstract the developmental mechanisms transforming genotypic to phenotypic forms are typically omitted in formulations of genetic algorithms (gas) in which these two representational spaces are identical. we argue that a careful analysis of developmental mechanisms is useful when understanding the success of several standard ga techniques, and can clarify the relationships between more recently proposed enhancements. we provide a framework which distinguishes between two developmental mechanisms | learning and maturation | while also showing several common effects on ga search. this framework is used to analyze how maturation and local search can change the dynamics of the ga. we observe that in some contexts, maturation and local search can be incorporated into the fitness evaluation, but illustrate reasons for considering them seperately. further, we identify contexts in which maturation and local search can be distinguished from the fitness evaluation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_12833",
        "graph": {
            "node_idx": 12833,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    1
                ],
                [
                    0,
                    0,
                    2,
                    2
                ]
            ],
            "node_list": [
                12833,
                21029,
                12819,
                14630
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: toward a market model for bayesian inferencewe present a methodology for representing probabilistic relationships in a general-equilibrium economic model. specifically, we define a precise mapping from a bayesian network with binary nodes to a market price system where consumers and producers trade in uncertain propositions. we demonstrate the correspondence between the equilibrium prices of goods in this economy and the probabilities represented by the bayesian network. a computational market model such as this may provide a useful framework for investigations of belief aggregation, distributed probabilistic inference, resource allocation under uncertainty, and other problems of de centralized uncertainty. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12835",
        "graph": {
            "node_idx": 12835,
            "edge_index": [
                [
                    1,
                    0
                ],
                [
                    0,
                    1
                ]
            ],
            "node_list": [
                12835,
                12834
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: incremental tradeoff resolution in qualitative probabilistic networksqualitative probabilistic reasoning in a bayesian network often reveals tradeoffs: relationships that are ambiguous due to competing qualitative influences. we present two techniques that combine qualitative and numeric probabilistic reasoning to resolve such tradeoffs, inferring the qualitative relationship between nodes in a bayesian network. the first approach incrementally marginalizes nodes that contribute to the ambiguous qualitative relationships. the second approach evaluates approximate bayesian networks for bounds of probability distributions, and uses these bounds to determinate qualitative relationships in question. this approach is also incremental in that the algorithm refines the state spaces of random variables for tighter bounds until the qualitative relationships are resolved. both approaches provide systematic methods for tradeoff resolution at potentially lower computational cost than application of purely numeric methods. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12836",
        "graph": {
            "node_idx": 12836,
            "edge_index": [
                [
                    1,
                    0
                ],
                [
                    0,
                    1
                ]
            ],
            "node_list": [
                12836,
                12838
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: automated diagnosis and image understanding with object extraction, object classification, and inferencing in retinal imagesmedical imaging is shifting from film to electronic images. the stare (structured analysis of the retina) system is a sophisticated image management system that will automatically diagnose images, compare images, measure key features in images, annotate image contents, and search for images similar in content. we concentrate on automated diagnosis. the images are annotated by segmentation of objects of interest, classification of the extracted objects, and reasoning about the image contents. the inferencing is accomplished with bayesian networks that learn from image examples of each disease. this effort at image understanding in fundus images anticipates the future use of medical images. as these capabilities mature, we expect that ophthalmologists and physicians in other fields that rely in images will use a system like stare to reduce repetitive work, to provide assistance to physicians in difficult diagnoses or with unfamiliar diseases, and to manage images in large image databases. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_12844",
        "graph": {
            "node_idx": 12844,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    1,
                    7,
                    8,
                    4,
                    5,
                    9,
                    10,
                    1,
                    7,
                    2,
                    4,
                    5,
                    11
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5,
                    5
                ]
            ],
            "node_list": [
                12844,
                21033,
                12845,
                21139,
                21141,
                12640,
                21142,
                12843,
                21138,
                21144,
                12639,
                12846
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: bandit strategies for ethical sequential allocationthe problem of allocating patients in a two treatment clinical trial with dichotomous response is considered. the trial goal is to determine the better treatment while incurring as few patient losses as possible. several allocation rules are compared and it is found that bandit strategies perform well on both criteria in that they achieve nearly optimal power while keeping expected trial failures nearly minimal. the rules are also evaluated according to their computational complexity. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_12856",
        "graph": {
            "node_idx": 12856,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                12856
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: learning coordination plans in distributed problem-solving environments topics: learning and adaptation in multi-agent worlds; coordination;coordination is an essential technique in cooperative, distributed multi-agent systems. however, sophisticated coordination strategies are not always cost-effective in all problem-solving situations. this paper presents a learning method to acquire coordination plans for specific problem-solving situations so that the appropriate type of coordination strategy is used. this learning is accomplished by recording and analyzing traces of inferences after problem solving. the analysis results in identification of situations where inappropriate coordination strategies have caused redundant activities or the lack of timely execution of important activities, thus degrading system performance. based on this identification, situation-specific coordination plans are created which use additional non-local information about activities in the networks to remedy the problem. an example from a real distributed problem-solving application involving diagnosis of a local area network is described. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_12862",
        "graph": {
            "node_idx": 12862,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                12862
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: multiple data parallelism with hpf and kelphigh performance fortran (hpf) is an effective language for implementing regular data parallel applications on distributed memory architectures, but it is not well suited to irregular, block-structured applications such as multiblock and adaptive mesh methods. a solution to this problem is to use a non-hpf spmd program to coordinate multiple concurrent hpf tasks, each operating on a regular subgrid of an irregular data domain. to this end we have developed an interface between the c++ class library kelp, which supports irregular, dynamic block-structured applications on distributed systems, and an hpf compiler, shpf. this allows kelp to handle the data layout and inter-block communications, and to invoke hpf concurrently on each block. there are a number of advantages to this approach: it combines the strengths of both kelp and hpf; it is relatively easy to implement; and it involves no extensions to hpf or hpf compilers. this paper describes the kelp-hpf implementation and programming model, and shows an example kelp-hpf multiblock solver. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_12882",
        "graph": {
            "node_idx": 12882,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                12882
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: register allocation for predicated codecurrent compilers for vliw and superscalar machines increase the instruction level parallelism of an application by merging several basic blocks into an enlarged predicated block, resulting in higher performance code but increased register requirements. we present a framework that computes precisely the interferences among virtual registers in the presence of predicated operations. graph-coloring based register allocators can directly use the resulting interference graph. for interval-graph based register allocators, and others, we propose a technique that reduces the register requirements by allowing non-interfering virtual registers that overlap in time to share a common virtual register. preliminary measurements on a benchmark of loops from the perfect club, spec-89, and the livermore fortran kernels indicate the effectiveness of this technique. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_12908",
        "graph": {
            "node_idx": 12908,
            "edge_index": [
                [
                    1,
                    2,
                    2,
                    3
                ],
                [
                    0,
                    0,
                    1,
                    2
                ]
            ],
            "node_list": [
                12908,
                12917,
                12922,
                21084
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: exact motion planning for tractor-trailer robotsa tractor-trailer robot consists of a carlike tractor towing a passive trailer. due to its highly nonholonomic nature, the kinematics of this type of robot are complicated and difficult to compute. we present exact closed-form solutions for the kinematic parameters of a tractor-trailer robot and use them to construct an exact and efficient motion planner in the absence of obstacles. this local planner can be employed in a probabilistic global planner, which allows us to plan motions in the presence of obstacles. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_12956",
        "graph": {
            "node_idx": 12956,
            "edge_index": [
                [
                    0
                ],
                [
                    0
                ]
            ],
            "node_list": [
                12956
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: practicable sensitivity analysis of bayesian belief networksby subjecting a bayesian belief network to a sensitivity analysis with respect to its conditional probabilities, the reliability of its output can be evaluated. unfortunately, straightforward sensitivity analysis of a belief network is highly time-consuming, as a result of the usually large number of probabilities to be investigated. in this paper, we show that the graphical independence structure of a bayesian belief network induces various properties that allow for reducing the computational burden of a sensitivity analysis. we show that several analyses can be identified as being uninformative because the conditional probabilities under study cannot affect the network's output. in addition, we show that the analyses that are informative comply with simple mathematical functions. by exploiting these properties, the practicability of sensitivity analysis of bayesian belief networks is enhanced considerably. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, probabilistic methods"
            }
        ]
    },
    {
        "id": "cora_test_13247",
        "graph": {
            "node_idx": 13247,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    1,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10
                ],
                [
                    0,
                    0,
                    0,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3
                ]
            ],
            "node_list": [
                13247,
                21291,
                13248,
                9109,
                21298,
                13245,
                18430,
                21288,
                13261,
                23168,
                24006
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: peer replication with selective controlpeer-to-peer optimistic replication strategies provide improved functionality over traditional client-server models by enabling any-to-any communication. this is especially useful in environments with common network partitions, such as mobile environments, in which communicating with a closely connected peer can be cheaper than communicating with a distant, weakly connected server. however, most peer solutions require full replication, meaning that all replicas store the entire replication unit, whether it be a volume or a database. such strategies are clearly inefficient and not cost effective. users are forced to both store more data than they require and spend time and money maintaining consistency on that data, potentially making peer solutions unusable in practice. we have developed a set of algorithms that implement selective replication, allowing individual portions of the replication unit to be replicated independently. we have implemented our solution in ficus and allow files from the volume to be selectively replicated without storing the entire volume. we present a description of the algorithms and their implementation in the ficus file system, as well as a performance analysis. we argue that these methods permit the practical use of peer optimistic replication. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, distributed"
            }
        ]
    },
    {
        "id": "cora_test_13450",
        "graph": {
            "node_idx": 13450,
            "edge_index": [
                [
                    1,
                    2,
                    3
                ],
                [
                    0,
                    1,
                    1
                ]
            ],
            "node_list": [
                13450,
                379,
                16458,
                13963
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: invariant signatures and non-interactive zero-knowledge proofs are equivalent (extended abstract)the standard definition of digital signatures allows a document to have many valid signatures. in this paper, we consider a subclass of digital signatures, called invariant signatures, in which all legal signatures of a document must be identical according to some polynomial-time computable function (of a signature) which is hard to predict given an unsigned document. we formalize this notion and show its equivalence to non-interactive zero-knowledge proofs. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_13461",
        "graph": {
            "node_idx": 13461,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    2,
                    7,
                    8,
                    1,
                    2,
                    3,
                    6,
                    9,
                    10,
                    11,
                    12,
                    13,
                    1,
                    14,
                    15,
                    16,
                    17,
                    18,
                    6,
                    19,
                    20,
                    3,
                    2
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    3,
                    4,
                    4
                ]
            ],
            "node_list": [
                13461,
                12502,
                5911,
                10661,
                13471,
                20840,
                21516,
                5910,
                13481,
                21522,
                13490,
                21525,
                13482,
                21526,
                21540,
                13495,
                8103,
                21528,
                19500,
                21896,
                23541
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: tracker fusion for robustness in visual feature trackingtask-directed vision obviates the need for general image comprehension by focusing attention only on features which contribute useful information to the task at hand. window-based visual tracking has helped make long strides in research along this paradigm as motion tracking becomes a problem of local search in a small image region. while the gains in speed from such methods allow for real-time feature tracking on off-the-shelf hardware, they lose robustness by giving up a more global perspective: window-based feature trackers are prone to such problems as distraction, illumination changes, fast features, and so forth. we apply sensor fusion techniques to \"tracker fusion,\" where multiple trackers simultaneously track the same feature while watching for various problematic circumstances and combine their estimates in a meaningful way. by categorizing different situations in which mistracking occurs, finding appropriate trackers to deal with each such situation, and fusing the resulting trackers together, we construct robust feature trackers which maintain the speed of simple window-based trackers, yet afford greater resistance to mistracking. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_13471",
        "graph": {
            "node_idx": 13471,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    2,
                    1,
                    4,
                    16,
                    17,
                    18,
                    19
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                13471,
                10661,
                5911,
                13495,
                21516,
                21528,
                21541,
                8103,
                21526,
                22936,
                22942,
                22946,
                23541,
                5910,
                13481,
                12502,
                21522,
                13490,
                21525,
                13482
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: servomatic: a modular system for robust positioning using stereo visual servoingwe introduce servomatic, a modular system for robot motion control based on calibration-insensitive visual servoing. a small number of generic motion control operations referred to as primitive skills use stereo visual feedback to enforce a specific task-space kinematic constraint between a robot end-effector and a set of target features. primitive skills are able to position with an accuracy that is independent of errors in hand-eye calibration and are easily combined to form more complex kinematic constraints as required by different applications. the system has been applied to a number of example problems, showing that modular, high precision, vision-based motion control is easily achieved with off-the-shelf hardware. our continuing goal is to develop a system where low-level robot control ceases to be a concern to higher-level robotics researchers. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_13555",
        "graph": {
            "node_idx": 13555,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                13555
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: modeling gaze behavior as a function of discourse structurethis paper addresses the problem of designing conversational agents that exhibit appropriate gaze behavior during dialogues with human users. previous research on gaze behavior has concentrated on its relationship to turn-taking phenomena [3,4,5]. recent work has incorporated some of these findings into the design of autonomous humanlike conversational agents and interactive communicative humanoids [1,13]. however, none of this research has examined the relationship between information structure and gaze behavior. in this paper we discuss why turn-taking is not an adequate explanation for gaze behavior in conversation and why information structure should be integrated with turn-taking as an explanation for this behavior. we then examine the relationship of gaze behavior to information structure and turn-taking through an empirical analysis of discourse transcripts for several dyadic conversations. a simple algorithm for assigning gaze behavior is proposed on the basis of the findings of this empirical analysis. we describe work in progress on implementing this algorithm in an existent communicative humanoid agent [14] with the goal of producing more natural gaze behavior related to propositional content in human-computer conversations. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_13577",
        "graph": {
            "node_idx": 13577,
            "edge_index": [
                [
                    1,
                    1,
                    0
                ],
                [
                    0,
                    1,
                    1
                ]
            ],
            "node_list": [
                13577,
                13578
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: fast constraint propagation on specialized allen networks and its application to action recognition and controlm.i.t media laboratory perceptual computing section technical report no. 456 january 1998 abstract in this paper we present a specialization of allen interval networks that permits the rapid determination as to whether a given interval must be occurring at the current point in time. the allen-closure of the interval network is projected into a 3-valued (past,now,fut) constraint network called a pnf-network. we show that the minimal domain of a pnf-network can be approximately computed in linear time by using arc-consistency. this computation is the key factor in the pnf propagation method of determining, for each instant of time and given information from perceptual sensors, the pnf-state of each interval, that is, happening (now), already happened (past), or has not happened (fut). we show how the computation of pnf-states can support both action recognition and the control of real-time interactive environments in which the actions are described by allen interval networks. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_13631",
        "graph": {
            "node_idx": 13631,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                13631,
                12830,
                12821,
                12824,
                21636,
                10463,
                16367
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the potential of electronic commerce in re- engineering consumer-retailer relationships through intelligent agentsas the need for more efficient business practices arises in the area of business to consumer relationships, enterprises strangle to explore new channels so as to provide services that will offer the opportunity for business extension, maximisation of profit and, at the same time, consumer satisfaction. however, there is a lot of other issues that need to be examined in this context. consumer behaviour is totally changing against virtual services while traditional processes such as shopping or product evaluation related to consumer analysis acquire a totally new content. this paper is investigating the potential of electronic commerce technologies and especially internet, in transforming the traditional retailing processes through the use of intelligent agents, with emphasis in the marketing aspects. a framework of desired services is defined and an architecture for establishing the necessary interface among retailers and consumers in a future retail cyberspace is proposed. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_13719",
        "graph": {
            "node_idx": 13719,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                13719,
                21703
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: interprocedural analysis for loop scheduling and data allocationin order to reduce remote memory accesses on cc-numa multiprocessors, we present an interprocedural analysis to support static loop scheduling and data allocation. given a parallelized program, the compiler constructs graphs which represent globally and interprocedurally the remote reference penalties associated with different choices for loop scheduling and data allocation. after deriving an optimal solution according to those graphs, the compiler generates data allocation directives and schedules doall loops. experiments indicate that the proposed compiler scheme is efficient and simulation results show good performance of the parallel code. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_13720",
        "graph": {
            "node_idx": 13720,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4
                ],
                [
                    0,
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                13720,
                15884,
                22650,
                15889,
                23568
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: compiler techniques for concurrent multithreading with hardware speculation supportrecently proposed concurrent multithreading architectures employ sophisticated hardware to support speculation on control and data dependences as well as run-time data dependence check, which enables parallelization of program regions such as while-loops which previously were ignored. the new architectures demand compilers to put more emphasis on the formation and selection of parallel threads. compilers also play an important role in reducing the cost of run-time data dependence check. this paper discusses these new issues. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_13730",
        "graph": {
            "node_idx": 13730,
            "edge_index": [
                [
                    1,
                    0,
                    2
                ],
                [
                    0,
                    0,
                    0
                ]
            ],
            "node_list": [
                13730,
                21715,
                22723
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a provably correct compiler generatorwe have designed, implemented, and proved the correctness of a compiler generator that accepts action semantic descriptions of imperative programming languages. the generated compilers emit absolute code for an abstract risc machine language that currently is assembled into code for the sparc and the hp precision architecture. our machine language needs no run-time type-checking and is thus more realistic than those considered in previous compiler proofs. we use solely algebraic specifications; proofs are given in the initial model. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_13811",
        "graph": {
            "node_idx": 13811,
            "edge_index": [
                [
                    1,
                    2,
                    0,
                    3,
                    4,
                    5,
                    6,
                    7,
                    4,
                    1
                ],
                [
                    0,
                    0,
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "node_list": [
                13811,
                13816,
                13842,
                13815,
                13840,
                15238,
                22971,
                15521
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a portable code generator for cray fortran language for portability. gencray defines a lisp-style inputone way to combine the powers of symbolic computing with numeric computing is to automatically derive and produce numeric code. this approach has important applications in science and engineering. once the desired formulas and procedures are derived in a symbolic manipulation system, they can be translated into a target numeric language by a code generator. gencray is a code generator written fl current address: department of computer sciences, purdue university, west lafayette, in 47907. y work reported herein has been supported in part by the army research office under grant daal03-91-g-0149 and in part by the national science foundation under grants ccr-8714836 and eet-8714628. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, compiler design"
            }
        ]
    },
    {
        "id": "cora_test_13863",
        "graph": {
            "node_idx": 13863,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                13863
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: situation calculus with aspectin this paper, we describe situation calculus with aspect, which is an extension of the classical situation calculus. the new approach allows efficient representation of the frame axioms and partially ordered plans. in s.c. with aspect, fluents and actions are associated with aspects. the frame axioms are replaced by axioms that describe the interference relation between aspects. a plan is represented as multiple sequences of actions applied on different aspects. we believe that the new representation will improve the efficiency of logic based planners and facilitate the analysis of total order and partial order planning techniques. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_13872",
        "graph": {
            "node_idx": 13872,
            "edge_index": [
                [
                    1,
                    2
                ],
                [
                    0,
                    1
                ]
            ],
            "node_list": [
                13872,
                10167,
                19122
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: fast key exchange with elliptic curve systemsthe diffie-hellman key exchange algorithm can be implemented using the group of points on an elliptic curve over the field f 2 n . a software version of this using n = 155 can be optimized to achieve computation rates that are significantly faster than non-elliptic curve versions with a similar level of security. the fast computation of reciprocals in f 2 n is the key to the highly efficient implementation described here. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_13982",
        "graph": {
            "node_idx": 13982,
            "edge_index": [
                [
                    0
                ],
                [
                    0
                ]
            ],
            "node_list": [
                13982
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: automated generation of tracking plans for a network of communications antennasthis paper describes the deep space network antenna operations planner (dplan) : a system that automatically generates antenna tracking plans for a set of highly sensitive radio science and telecommunications antennas. dplan accepts as inpu t an equipment configuration and a set of requested antenna track services. the system then uses a knowledge base of antenna operations procedures to produce a plan of activities that will provide the requested services using the allocated equipment. dplan produces this plan using an integration of hierarchical task network (htn) and operator-based planning. a prototype of the dplan system was successfully demonstrated in febr uary 1995 at nasas experimental dsn station, dss-13, on a series of voyager tracks. based on this successful demonstration, dplan is being considered for inclusion in the larger network monitor and control (nmc) upgrade underway projected to save nasa over $9 million per year in operations costs. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_13998",
        "graph": {
            "node_idx": 13998,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                13998
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: guided crossover: a new operator for genetic algorithm based optimizationgenetic algorithms (gas) have been extensively used in different domains as a means of doing global optimization in a simple yet reliable manner. they have a much better chance of getting to global optima than gradient based methods which usually converge to local sub optima. however, gas have a tendency of getting only moderately close to the optima in a small number of iterations. to get very close to the optima, the ga needs a very large number of iterations. whereas gradient based optimizers usually get very close to local optima in a relatively small number of iterations. in this paper we describe a new crossover operator which is designed to endow the ga with gradient-like abilities without actually computing any gradients and without sacrificing global optimality. the operator works by using guidance from all members of the ga population to select a direction for exploration. empirical results in two engineering design domains and across both binary and floating point representations demonstrate that the operator can significantly improve the steady state error of the ga optimizer. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_14017",
        "graph": {
            "node_idx": 14017,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                14017,
                21945
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: using hindsight in medical decision makingas the clinical picture of a patient evolves over time, more information becomes available. certain procedures require time to perform, causing a delay between the time when the tests are ordered and when the results are available. furthermore, as the patient's condition changes over time, serial measurements can be made. the availability of more data allows a more accurate assessment of the patient. uncertainties, guesses or errors that were made early in the clinical course of patient care can also be identified and resolved when more information is available. reasoning with a stream of data that changes over time presents a challenge to the designers of expert systems. the use of hindsight in expert systems requires that appropriate attention be paid to the temporal relations of the data and that care is exercised in revising decisions. i present a data-dependency system, the temporal control structure (tcs), designed to support reasoning with data changing over time and show how it can be used to implement reasoning by hindsight. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_14020",
        "graph": {
            "node_idx": 14020,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11
                ],
                [
                    0,
                    0,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2,
                    2
                ]
            ],
            "node_list": [
                14020,
                21949,
                6638,
                9188,
                17885,
                18522,
                6639,
                19872,
                384,
                21018,
                21958,
                24106
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: development of a secure electronic marketplace for europebacked by the european commission, a consortium of partners from european industry, financial institutions, and academia has embarked on a research project to develop the fundamentals of secure electronic commerce. the goal of project semper (secure electronic marketplace for europe) is to provide the first open and comprehensive solutions for secure commerce over the internet and other public information networks. we describe the objectives and summarise the initial architecture of semper . \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_14196",
        "graph": {
            "node_idx": 14196,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                14196,
                22127
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: improving pvm performance using atomic user-level protocolparallel virtual machine (pvm) software system provides a programming environment that allows a collection of networked workstations to appear as a single concurrent computational resource. the performance of parallel applications in this environment depends on the performance of reliable data transfers between tasks. in this paper, we improve pvm communication performance over the atomic lan, a gigabit per-second local area network. this is achieved by separating the pvm data-transmission path from the pvm control-message path and transmitting pvm data messages over a user-level application programming interface (api) provided by the myrinet atomic interface. the myrinet-api, although significantly faster than the tcp/ip kernel stack, does not provide reliable communication. therefore, a user-level protocol has been developed based on the myrinet-api to offer reliable sequenced packet delivery. this protocol provides faster data transfers between pvm tasks over the atomic lan. performance results obtained at usc/isi demonstrate that our version of pvm can reach up to 140 mbps throughput, which is 94% of the achievable network bandwidth over the atomic lan. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_14210",
        "graph": {
            "node_idx": 14210,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                14210,
                22158
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a disjunctive decomposition scheme for discrete constraint satisfaction problems using complete no-good setsin this paper, we introduce a new disjunctive decomposition scheme for discrete constraint satisfaction problems (csps). this strategy is based on first identifying complete no-goods in a graph derived from the microstructure of the csp, then using these no-goods to decompose the initial csp into subproblems that exclude these no-goods. this decomposition produces a partition of the solution space and is guaranteed to keep all solutions while reducing the total number of possibilities to be considered. we describe the strategy, study its properties, and identify the number of possibilities that are excluded at any decomposition step. we describe a practical application to which this strategy can be efficiently applied and compare our technique to some decomposition methods reported in the literature. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_14236",
        "graph": {
            "node_idx": 14236,
            "edge_index": [
                [
                    1,
                    2,
                    2
                ],
                [
                    0,
                    0,
                    1
                ]
            ],
            "node_list": [
                14236,
                14272,
                22226
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: real-time simulation-based planning for computer generated force simulationautomated planning has been an active research topic for more than thirty years but only recently has it started to move in the direction of combining planning and execution to achieve what is sometimes called as intelligent reactive planning. we propose simulation-based planning (sbp) as a new way to perform intelligent reactive planning. sbp |unlike most other planning systems|integrates simulation into the planning process. once a set of plans is generated, simulations are used to test and evaluate the plans to choose the most applicable plan for that current situation. in most planning systems, plan evaluation depends on rules alone and because rules must be designed general enough to cover all possible cases, the evaluation is not specific enough for some individual cases. however, when the plan evaluation is done through simulations, the evaluation can be more fine-tuned to individual cases and can allow better plans to be chosen for that individual case. from the military planning perspective, the simulation-based planner is also quite useful due to its ability to perform adversarial and multiagent planning. this is a natural consequence of using simulation in the planning process. by allowing other entities such as the enemy to simulate in parallel with the planner's forces, the planner is able to observe, prior to the actual execution, the effects of adversarial and multiagent actions against its own plans. [key words: artificial intelligence, autonomy, mission planning, computer g enerated forces, multimodeling] \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_14331",
        "graph": {
            "node_idx": 14331,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                14331
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: an efficient solution to traffic characterization of vbr video in quality-of-service networkstechnical report cs-96-10 department of computer science university of virginia charlottesville, va 22903 email: fjorg j dallasg@cs.virginia.edu abstract a network that offers deterministic, i.e., worst-case, quality-of-service (qos) guarantees to variable-bit-rate (vbr) video must provide a resource reservation mechanism that allocates bandwidth, buffer space, and other resources for each video connection. such a resource reservation scheme must be carefully designed, otherwise network resources are wasted. a key issue for the design of a resource reservation scheme is the selection of a traffic characterization that specifies the traffic arrivals on a video connection. the traffic characterization should accurately describe the actual arrivals so that a large number of connections can be supported, but it must also map directly into efficient traffic policing mechanisms that monitor arrivals on each connection. in this study, we present a fast and accurate traffic characterization method for stored vbr video in networks with a deterministic service. our characterization approach approximates the so-called empirical envelope of a video sequence. we use this approximation to obtain a traffic characterization that can be efficiently policed by a small number of leaky buckets. we present a case study where we apply our characterization method to networks that employ a dynamic resource reservation scheme with renegotiation. we use traces from a set of 25-30 minute mpeg sequences to evaluate our method against other characterization schemes from the literature. fl this work is supported in part by the national science foundation under grant no. ncr-9309224. some results from this paper were presented at the ieee infocom '96 conference. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_14356",
        "graph": {
            "node_idx": 14356,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                14356,
                22284
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: contract-based distributed scheduling for distributed processingto an increasing extent, large-scale information processing is a distributed phenomenon. as the trend in computing moves further towards distributed networks of powerful workstations and information servers, we see the growing importance of solutions to dynamic distributed scheduling problems. in these domains, resource providers are distributed both geographically and bureaucratically, so that no central authority can dictate a global schedule. resource consumers are also distributed: tasks arrive at different locations according to arrival functions that are at best stochastically predictable. in this paper, we describe a distributed constraint-based scheduling system that adjusts task distribution and execution times through the negotiation of contracts, using a refinement of the contract net protocol. by combining the minimal-commitment capabilities of constraint-based scheduling with the distributed coordination features of contracting, this system responds flexibly to dynamic variations in load balance and unpredictable task arrivals. large-scale simulations show significant performance benefits to using powerful scheduling methods in the determination of contract negotiation bids. these results can be used to improve the performance of distributed computing systems cooperating to process large-scale shareable tasks. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, planning"
            }
        ]
    },
    {
        "id": "cora_test_14489",
        "graph": {
            "node_idx": 14489,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                14489,
                22365
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: toward feature engineering of software systemsuniversity of colorado department of computer science technical report cu-cs-830-97 february 1997 abstract the gulf between the user and the developer perspectives leads to difficulties in producing successful software systems. users are focused on the problem domain, where the system's features are the primary concern. developers are focused on the solution domain, where the system's lifecycle artifacts are key. presently, there is little understanding of how to narrow this gulf. this paper argues for establishing an organizing viewpoint that we term feature engineering. feature engineering promotes features as first-class objects throughout the software lifecycle and across the problem and solution domains. the goal of the paper is not to propose a specific new technique or technology. rather, it aims at laying out some basic concepts and terminology that can be used as a foundation for developing a sound and complete theory of feature engineering. the paper discusses the impact that features have on different phases of the lifecycle, provides some ideas on how these phases can be improved by fully exploiting the concept of feature, and suggests topics for a research the work of a. fuggetta was supported in part by cnr. the work of a.l. wolf was supported in part by the air force material command, rome laboratory, and the defense advanced research projects agency under contract number f30602-94-c-0253. the content of the information does not necessarily reflect the position or the policy of the u.s. government and no official endorsement should be inferred. c fl 1997 c. reid turner, alfonso fuggetta, and alexander l. wolf \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_14517",
        "graph": {
            "node_idx": 14517,
            "edge_index": [
                [
                    1,
                    0
                ],
                [
                    0,
                    1
                ]
            ],
            "node_list": [
                14517,
                14516
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: global solutions for nonlinear systems using qualitative reasoningthis paper explores how qualitative information can be used to improve the performance of global optimization procedures. specifically, we have constructed a nonlinear parameter estimation reasoner (nper) for finding parameter values that match an ordinary differential equation (ode) model to observed data. qualitative reasoning (qr) is used within the nper, for instance, to intelligently choose starting values for the unknown parameters and to empirically determine when the system appears to be chaotic. this enables odrpack, the nonlinear least-squares solver that lies at the heart of this nper, to avoid terminating at local extrema in the regression landscape. odrpack is uniquely suited to this task because of its efficiency and stability. the nper's robustness is demonstrated via a monte carlo analysis of simulated examples drawn from across the domain of dynamics, including systems that are nonlinear, chaotic, and noisy. it is shown to locate solutions for noisy, incomplete real-world sensor data from radio-controlled cars used in the university of british columbia's soccer-playing robot project. the parameter estimation scheme described in this paper is a component of pret, an implemented computer program that uses a variety of artificial intelligence \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_14551",
        "graph": {
            "node_idx": 14551,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                14551
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: delivering popular web pages using cyclic multicast (extended abstract)the world wide web has gained tremendously in popularity over the last several years. one solution to the problem of overloaded www servers is to use multicast for the delivery of pages. in this work we explore the use of udp, best-effort multicast as a delivery option. reliability is achieved through repetitive, cyclic transmission of a requested page. we describe the cyclic multicast technique and consider the various procedures needed for its successful operation. we characterize the gains in performance achieved by our proposal through an extensive performance analysis and reference our ongoing work in simulating and implementing a cyclic multicast server. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_14860",
        "graph": {
            "node_idx": 14860,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    1,
                    9
                ],
                [
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1,
                    1
                ]
            ],
            "node_list": [
                14860,
                3054,
                3051,
                4052,
                2150,
                15539,
                2151,
                14864,
                6842,
                16212
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: reliable fifo load balancing over multiple fifo channelslink striping algorithms are often used to overcome transmission bottlenecks in computer networks. however, traditional striping algorithms suffer from two major disadvantages. they provide inadequate load sharing in the presence of variable length packets, and may result in non-fifo delivery of data. we describe a new family of link striping algorithms that solve both problems. our scheme applies to packets at any layer (physical, data link, network, and transport) that work over multiple fifo channels. we deal with variable sized packets by showing how a class of fair queueing algorithms can be converted into load sharing algorithms. our transformation results in practical load sharing protocols, and also shows a theoretical connection between two seemingly different problem areas. we deal with the fifo requirement for two separate cases. if a header (with a sequence number) can be added to each packet, we show how to speed up packet processing by letting the receiver simulate the sender algorithm. if no header can be added (e.g., atm cells), we show how to provide quasi-fifo delivery. quasi-fifo is fifo except during occasional periods of loss of synchronization between the sender and the receiver. we argue that quasi-fifo should be adequate for most applications. to deal with loss of synchronization between the sender and receiver, we present simple recovery protocols. we provide performance analysis, experimental results, and proofs of our assertions. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_15223",
        "graph": {
            "node_idx": 15223,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15223,
                22964
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: literate programming on a team projectwe used literate programming on a team project to write a 33,000-line program for the synthesizer generator. the program, penelope, was written using web, a tool designed for writing literate programs. unlike other web programs, many of which have been written by web's developer or by individuals, penelope was not intended to be published. we used web in the hope that both our team and its final product would benefit from the advantages often attributed to literate programming. the web source served as good internal documentation throughout development and maintenance, and it continues to document penelope's design and implementation. our experience also uncovered a number of problems with web. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_15333",
        "graph": {
            "node_idx": 15333,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                15333
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: infrastructure for mobile agentsstate of the art distributed application technology is not suited to tackle the challenges offered by the information superhighway. a new communication model based on mobile agents has been proposed and is still intensely studied. research on the software infrastructure required to host agents on the move is urgently needed. the paper presents a requirements analysis for the infrastructure needs of agents in a distributed applications environment such as dce or corba. it introduces an outline of a comprehensive proposal which includes requirements for autonomy, communication, mobility and security. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_15377",
        "graph": {
            "node_idx": 15377,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                15377
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: motion planning for a steering-constrained point robot through moderate obstaclesmost mobile robots use steering mechanisms to guide their motion. such mechanisms have stops that constrain the rate at which the robot can change its direction. we study a point robot in the plane subject to such constraints, in the presence of a class of obstacles we call moderate obstacles. we consider the case in which the robot has a reverse gear that allows it to back up, as well as the case when it does not. all our algorithms run in polynomial time and produce paths whose lengths are either optimal or within an additive constant of optimal. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_15383",
        "graph": {
            "node_idx": 15383,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15383,
                23083
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: collision/contact models for the dynamic simulation of complex environmentsin this paper we examine the constraint equations developed for two general dynamic simulation systems from a new perspective. a contact space framework, similar to the operational space framework used for robotic control, is developed which allows the constraint equations for contact and collision to be easily specified. this framework also allows us to scrutinize the multiple relations that exist between the dynamic models used in simulation and the models originally developed for robotic control and analysis. this framework has been used to develop a simulator that can model complex interaction between generalized articulated mechanical systems at interactive rates. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_15480",
        "graph": {
            "node_idx": 15480,
            "edge_index": [
                [
                    1,
                    2
                ],
                [
                    0,
                    0
                ]
            ],
            "node_list": [
                15480,
                23176,
                23881
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a framework for behavioural cloningthis paper describes recent experiments in automatically contruct-ing reactive agents. the method used is behavioural cloning, where the logged data from skilled, human operators are input to an induction program which outputs a control strategy for a complex control task. initial studies were able to successfully construct such be-havioural clones, but suffered from several drawbacks, namely, that the clones were brittle and difficult to understand. current research is aimed at solving these problems by learning in a framework where there is a separation between an agent's goals and its knowledge of how to achieve them. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_15496",
        "graph": {
            "node_idx": 15496,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15496,
                23188
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: adaptive behavior in competing co-evolving speciesco-evolution of competitive species provides an interesting testbed to study the role of adaptive behavior because it provides unpredictable and dynamic environments. in this paper we experimentally investigate some arguments for the co-evolution of different adaptive protean behaviors in competing species of predators and preys. both species are implemented as simulated mobile robots (kheperas) with infrared proximity sensors, but the predator has an additional vision module whereas the prey has a maximum speed set to twice that of the predator. different types of variability during life for neurocontrollers with the same architecture and genetic length are compared. it is shown that simple forms of pro-teanism affect co-evolutionary dynamics and that preys rather exploit noisy controllers to generate random trajectories, whereas predators benefit from directional-change controllers to improve pursuit behavior. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_15547",
        "graph": {
            "node_idx": 15547,
            "edge_index": [
                [
                    0
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15547
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: programmable vector fields for distributed manipulation, with applications to mems actuator arrays and vibratory partsprogrammable vector fields can be used to control a variety of flexible planar parts feeders. these devices can exploit exotic actuation technologies such as arrayed, massively-parallel micro-fabricated motion pixels or transversely vibrating (macroscopic) plates. these new automation designs promise great flexibility, speed, and dexterity|we believe they may be employed to orient, singulate, sort, feed, and assemble parts. however, since they have only recently been invented, programming and controlling them for manipulation tasks is challenging. when a part is placed on our devices, the programmed vector field induces a force and moment upon it. over time, the part may come to rest in a dynamic equilibrium state. by chaining together sequences of vector fields, the equilibrium states of a part in the field may be cascaded to obtain a desired final state. the resulting strategies require no sensing and enjoy efficient planning algorithms. this paper begins by describing our experimental devices. in particular, we describe our progress in building the m-chip (manipulation chip), a massively parallel array of programmable micro-motion pixels. as proof of concept, we demonstrate a prototype m-chip containing over 11,000 silicon actuators in one square inch. both the m-chip, as well as macroscopic devices such as transversely vibrating plates, may be programmed with vector fields, and their behavior predicted and controlled using our equilibrium analysis. we demonstrate lower bounds (i.e., impossibility results) on what the devices cannot do, and results on a classification of control strategies yielding design criteria by which well-behaved manipulation strategies may be developed. we provide sufficient conditions for programmable fields to induce well-behaved equilibria on every part placed on our devices. we define composition operators to build complex strategies from simple ones, and show the resulting fields are also well-behaved. we discuss whether fields outside this class can be useful and free of pathology. using these tools, we describe new manipulation algorithms. in particular, we improve existing planning algorithms by a quadratic factor, and the plan-length by a linear factor. using our new and improved strategies, we show how to simultaneously orient and pose any part, without sensing, from an arbitrary initial configuration. we relax earlier dynamic and mechanical assumptions to obtain more robust and flexible strategies. finally, we consider parts feeders that can only implement a very limited \"vocabulary\" of vector fields (as opposed to the pixel-wise programmability assumed above). we show how to plan and execute parts-posing and orienting strategies for these devices, but with a significant increase in planning complexity and some sacrifice in completeness guarantees. we discuss the tradeoff between mechanical complexity and planning complexity. fl an earlier, much shorter version of this paper was presented at the workshop on algorithmic foundations of robotics (toulouse, france, july 1996). \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, robotics"
            }
        ]
    },
    {
        "id": "cora_test_15660",
        "graph": {
            "node_idx": 15660,
            "edge_index": [
                [
                    1,
                    2,
                    3,
                    0,
                    1,
                    2,
                    4,
                    0,
                    1
                ],
                [
                    0,
                    0,
                    1,
                    1,
                    1,
                    1,
                    1,
                    2,
                    2
                ]
            ],
            "node_list": [
                15660,
                12566,
                14488,
                12565,
                23697
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: balboa: a framework for event-based process data analysiswe have built balboa as a bridge between the data collection and the analysis tools, facilitating the gathering and management of event data, and simplifying the construction of tools to analyze the data. balboa is a framework that provides to collection methods a flexible data registration mechanism, and provides to tools a consistent set of data manipulation, management, and access services. it unites the variety of collection mechanisms with the variety of tools, thus paving the way for more extensive application of process improvement techniques based on data analysis. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_15662",
        "graph": {
            "node_idx": 15662,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15662,
                23378
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: software architecture, configuration management, and configurable distributed systems: a menage a troisuniversity of colorado department of computer science technical report cu-cs-849-98 january 1998 abstract software architecture, configuration management, and configurable distributed systems are three areas of research that until now have evolved separately. contributions in each field have focused on their respective area of concern. however, as solutions in the three fields tend to center around some notion of a system model, it is worthwhile to investigate their relationship in detail. in particular, the large amount of overlap among the system models developed in each area, combined with the complementary nature of the differences among them, suggests that an approach based on a common system model is viable. in this paper, we illustrate the benefits of using such a unified system model, identify the commonalities and differences among the existing system models, and present some of our initial experiments that we believe will lead to the development of a single system model that is usable in all three fields. c fl 1998 andre van der hoek, dennis heimbigner, and alexander l. wolf \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_15688",
        "graph": {
            "node_idx": 15688,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15688,
                23401
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: authentication method with impersonal token cardstraditional methods of user authentication in distributed systems suffer from an important weakness which is due to the low degree of randomness in secrets that human beings can use for identification. even though weak secrets (passwords and pins) are typically not exposed in the clear over the communication lines, they can be discovered with off-line brute force attacks based on exhaustive trials. since such secrets are chosen from a relatively small key space, a determined adversary can try all possible values until a match is found between the trial value and the message recorded from a genuine authentication session. authentication devices like smartcards and token cards offer an attractive solution by providing a user with a cryptographically strong key for authentication. in contrast to passwords and pins, the device's key can be chosen from a much larger key space thus making a brute force attack computationally infeasible or, at least, difficult. in this paper we present a novel authentication method whereby the authentication device (a token card) is used solely to provide a secure channel between a human user and an authentication server (as). since the communication channel is secured by the card, the user can still utilize weak secrets for authentication purposes, but, without any risk of exposure. furthermore, the card's and the user's secrets are mutually independent, i.e., the card is not associated with any particular user. since the card is impersonal, it can be freely shared by several users. this eliminates the high cost of administration which is typical of existing designs requiring fixed user-device relationship. moreover, our method does not require any coupling between the token card and the workstation (e.g., a galvanic connection) which would be difficult to implement on a global scale and retrofit onto existing equipment. y in proceedings of 1993 ieee symposium on research in security and privacy. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_15707",
        "graph": {
            "node_idx": 15707,
            "edge_index": [
                [
                    1,
                    2,
                    3
                ],
                [
                    0,
                    0,
                    2
                ]
            ],
            "node_list": [
                15707,
                23424,
                15704,
                15708
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a case for customizable resource management in networkswe envision the deployment of an electronic services market that will deliver a wide range of electronic services over networks. this market will allow applications to combine resources at endpoints with resources inside the network to deliver high-quality products to end-users. electronic services will range from simple data delivery services to sophisticated value-added services such as video conferencing and data mining. we argue that the deployment of such a diverse set of services will be facilitated by the presence of an integrated set of customizable resource management mechanisms. in this paper, we introduce three concepts that respond to this need. first, the resources allocated to an application will be integrated in a virtual network that forms the basis of runtime resource management and quality of service optimization. second, each resource is managed by a hierarchical resource manager that satisfies the combined priorities and constraints of the services and applications sharing the resource. finally, since both network conditions and application requirements can change, application-specific adaptation is needed to optimize quality of service at runtime. the cmu darwin project is developing a comprehensive set of customizable resource management mechanisms based on these concepts. we outline the darwin resource management mechanisms and we describe an initial implementation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_15866",
        "graph": {
            "node_idx": 15866,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15866,
                23556
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: improving the effectiveness of atm traffic control over hybrid fiber-coax networksthe ieee 802.14 working group is currently standardizing a new media access control (mac) protocol for the emerging hybrid fiber coax (hfc) networks. crucial for the success of 802.14 will be its ability to support higher layer traffic services, namely, atm constant bit rate (cbr), variable bit rate (vbr) and available bit rate (abr) traffic classes. in this study, we investigate the interoperation of the mac protocol, defined by 802.14, with abr transmissions. an important finding of our study is that the bandwidth contention on the upstream channel in the hfc network may interfere with the feedback congestion control mechanisms of abr traffic control. this interference can result in unfairness between abr sources, and decreased utilization of the upstream hfc channel. as a solution to the problem we propose a scheme whereby the headend station of the hfc network returns congestion information contained in resource management (rm) cells to the abr sources. the proposed mechanism can be incorporated into the abr rate control scheme without modifying the current traffic management specifications. numerous simulation scenarios are presented to illustrate our findings. parts of the results have been presented to the ieee 802.14 standardization committee. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_15879",
        "graph": {
            "node_idx": 15879,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                15879,
                15880
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: agent server architecture for the ajanta mobile-agent systemthis paper provides an overview of ajanta, a java-based mobile-agent system, and focuses in particular on the architecture of the agent server - the process which hosts agents and enables them to access resources, communicate, migrate etc. the agent server's main components include an agent execution environment, an agent transfer protocol, a resource access protocol, and an agent monitoring service. security is a major concern in the design of each of these services. the paper describes how a security architecture is integrated into the agent server design, and informally argues about its correctness based upon java's security model. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_16019",
        "graph": {
            "node_idx": 16019,
            "edge_index": [
                [
                    1
                ],
                [
                    0
                ]
            ],
            "node_list": [
                16019,
                23686
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: open protocol in multi-agent systems*protocols for intelligent agents are difficult to write. this is partially because intelligent agents accommodate their interaction to the situation that arises. as a result, the interaction among intelligent agents cannot be governed by a fixed protocol. in this paper i describe an open protocol paradigm for reasoning in a multi-agent system with decentralized control. an open protocol is a collection of rules of interaction that lies open to further alteration and adjustment. i explore the notion of open protocol, and show how it can be altered by rational claims. this may lead to further insights concerning the government of interaction among intelligent agents in multi-agent systems. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_16458",
        "graph": {
            "node_idx": 16458,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16458
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the foundations of modern cryptography (version nr. 3.1)in our opinion, the foundations of cryptography are the paradigms, approaches and techniques used to conceptualize, define and provide solutions to natural cryptographic problems. in this essay, we survey some of these paradigms, approaches and techniques as well as some of the fundamental results obtained using them. special effort is made in attempt to dissolve common misconceptions regarding these paradigms and results. c flcopyright 1998 by oded goldreich. permission to make copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that new copies bear this notice and the full citation on the first page. abstracting with credit is permitted. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_16518",
        "graph": {
            "node_idx": 16518,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16518
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: synchronized two-way voice simulation tool for internet phone performance analysis and evaluationa simulation tool is developed for the performance analysis and evaluation of internet phone applications. the tool can be used offline to simulate real two-way phone conversations under different internet loss and delay conditions. the simulation model includes access links that connect an internet service provider to the internet, as well as background internet phone and data traffic. it also includes details of internet phone implementations such as encoding, packetization, silence detection, and the ip, udp, and rtp protocols. an original feature of the simulator is that it takes into account explicitly the synchronization of talkspurts in a two-way conversation. example results of two-way conversations under various delay and loss conditions are provided in audio files. pointers to download the files are at http://www-net.cs.umass.edu/~sbmoon/synch.html. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_16551",
        "graph": {
            "node_idx": 16551,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16551
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: how do firms transition between monopoly and competitive behavior? an agent-based economic modelartificial life has long held out the promise of revolutionizing how scientists approach a variety of problems. in this paper we describe an application of artificial life techniques to the study of a fundamental problem in economics: how does a firm transition from monopoly behavior to competitive behavior as other firms enter the market? solving traditional economic models provides the equilibrium, but does not give the path to equilibrium.the firms in our artificial life simulation do not have access to any global information about the market. the resulting global behavior that arises from this local price-setting behavior is the equilibrium predicted by the traditional analytical models. hence, our simulation provides a proof by example that simple, local rules of interaction can create the global regularities observed and predicted by economists, thus providing a relatively low upper bound on how complex firm agents must be to reach equilibrium. in this paper we describe the various agents in the model-firms, consumers, capital suppliers, labor suppliers-and present the outcome of several simulations of the model. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_16573",
        "graph": {
            "node_idx": 16573,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16573
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: physically based modelling of human limbsthis paper considers the modelling of human limbs featuring deformable tissue, which automatically exhibit realistic be-haviour when simulated in a synthetic environment. a limb model is proposed that incorporates a simple skeleton joint, muscle tissue, non-muscle tissue (e.g. fat), tendons and a skin layer. the only input parameters to the model are for simple low-level control of muscle activation, with the resulting motion and deformation of the limb being generated automatically. to demonstrate the approach we have implemented a preliminary model of the limb which incorporates a new mass-spring-damper model based on octahedral elements for modelling the deformable tissue. the results show effects that occur in real limbs such as bulging and creasing at joints. keywords: animation, modelling, dynamics, simulation, deformation, elastic, human, limb, tissue. cr categories: i.3.7 three dimensional graphics and realism (animation): i.6.3 simulation and modelling (applications). \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_16594",
        "graph": {
            "node_idx": 16594,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16594
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: probabilistic proof systems (a survey)various types of probabilistic proof systems have played a central role in the development of computer science in the last decade. in this exposition, we concentrate on three such proof systems | interactive proofs, zero-knowledge proofs, and probabilistic checkable proofs | stressing the essential role of randomness in each of them. fl this exposition is an expanded version of a survey written for the proceedings of the international congress of mathematicians (icm94) held in zurich in 1994. it is hoped that this exposition may be accessible to a broad audience of computer scientists and mathematians. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_16620",
        "graph": {
            "node_idx": 16620,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16620
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a conceptual framework for evolving software processessoftware processes are complex entities that may last for long periods of time and are carried out through the interaction of humans and computerized tools. they need to continuously evolve in order to cope with different kinds of changes or customizations both in the organization and in the technologies used to support software production activities. in recent years, many software process support technologies have been developed, and have currently been further extended and used in trial projects. moreover, some research prototypes have generated commercial products, that are marketed and currently used in industrial organizations. despite these significant efforts and results, however, there is still little conceptual characterization and assessment of the properties of software processes and related support environments. it is difficult to compare and assess existing approaches. even a common characterization of the problems to be addressed seems to be problematic and difficult to achieve. this is particularly true when we consider the process evolution problem, for which it does not seem that a common view of the issue has been established yet. this paper aims at proposing a conceptual framework to describe and assess flexible and evolving software processes. it is based on the assumption that a software process is composed of two main components: a software production process to carry out software production activities, and a software meta-process to improve and evolve the whole software process. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_16630",
        "graph": {
            "node_idx": 16630,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16630
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: specifying dynamism in software architecturesa critical issue for complex component-based systems design is the modeling and analysis of architecture. one of the complicating factors in developing architectural models is accounting for systems whose architecture changes dynamically (during run time). this is because dynamic changes to architectural structure may interact in subtle ways with on-going computations of the system. in this paper we argue that it is possible and valuable to provide a modeling approach that accounts for the interactions between architectural reconfiguration and non-reconfiguration system functionality, while maintaining a separation of concerns between these two aspects of a system. the key to the approach is to use a uniform notation and semantic base for both reconfiguration and steady-state behavior, while at the same time providing syntactic separation between the two. as we will show, this permits us to view the architecture in terms of a set possible architectural snapshots, each with its own steady-state behavior. transitions between these snapshots are accounted for by special reconfiguration-triggering events. fl research sponsored by the inria, the defense advanced research projects agency, and rome laboratory, air force materiel command, usaf, under agreement number f30602-97-2-0031, and by the national science foundation under grant no. ccr-9357792. the u.s. government is authorized to reproduce and distribute reprints for governmental purposes notwithstanding any copyright annotation thereon. the views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing the official policies or endorsements, either expressed or implied, of inria, the defense advanced research projects agency rome laboratory, or the u.s. government. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_16650",
        "graph": {
            "node_idx": 16650,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16650
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a framework for relocation in mobile process-centered software development environmentsthis paper addresses the problem of enabling a user of a process-centered sde, hosted on a high-speed network, to continue working on a detached mobile workstation connected by a lower speed interruptable communications link. the focus of the paper is a process for determining whether and how to allow detachment. the process takes into account a broad range of factors, including the speed and reliability of the mobile link, the relative sizes and speeds of the mobile and networked workstations, the nature and state of the development process, and the importance of the detaching user. the paper presents a formal framework that allows us to specify the various factors, and an objective function that quantifies the inconvenience incurred by the detachment. the process uses the framework to determine which tools and resources to relocate when the user detaches from the network. a detailed example is used to illustrate this process. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_16674",
        "graph": {
            "node_idx": 16674,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16674
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: interconnecting distributed legacy systems: virtual environment domain exampleas the power and utility of virtual reality environments increases, so do the potential benefits found from combinding several such environments. but doing so presents the developer with a host of difficult distributed systems issues. this paper explores what some of these issues are within the ve domain, relates our successes to date in overcoming these problems by means of various automated tools, and suggests ways to apply our results other target domains. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_16684",
        "graph": {
            "node_idx": 16684,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16684
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: experimenting with techniques for defect detection in requirementsin previous experiments [basili96], we showed that the perspective-based reading (pbr) family of defect detection techniques was effective at detecting faults in requirements documents in some contexts. in order to continue adding to our knowledge in this area, we have proposed two modifications to the pbr technique that we will assess in the proposed experiment. the first purpose of the experiment is to investigate whether defect detection in requirements documents can be improved by focusing on the errors (i.e. underlying human misconceptions) in a document rather than the individual faults that they cause. the rationale for this is that, in our experience, faults have been very difficult to quantify, classify, and define. additionally, by treating faults as isolated entities there is little possibility for using discovered faults to help find new ones. we are investigating whether the process of abstraction from faults to errors may give reviewers useful information about the requirements that would help them in discovering additional faults and fixing the document. we will evaluate the effectiveness of error abstraction in both ad hoc and pbr reviews, in order to examine potential interactions between the abstraction process and the fault detection technique used. the secondary purpose of the experiment is to investigate the effect of increasing the specificity of the pbr techniques. in the original experiment with pbr, we asked reviewers to rely on their experience with other processes in the software lifecycle (creating high-level designs, test plans, and user manuals) and to use this experience to answer specific questions. we propose changing the pbr techniques to provide detailed guidelines for each process used (e.g. objectoriented design, equivalence partitioning, and constructing use cases, respectively) with the specific questions distributed at key points in the guidelines. for novice reviewers, we hope to see that the additional level of specificity may help make up for the lack of experience in these software development processes. for expert reviewers, we hope to see that the additional specificity helps to focus them on the pbr technique instead of relying on their accustomed approach. to us as experimenters, the additional level of detail in the process means that we can now assess the level of process conformance to the pbr technique. in running this experiment in a classroom environment, we are subject to a number of constraints. most importantly: because all members of the class must be taught something, we cannot have a control group (because we cannot have a segment of the class with no treatment or training). because subjects are not isolated, and would presumably discuss their experiences at various parts of the experiment amongst themselves, we cannot cross the experimental artifacts (that is, use a particular artifact for one group before treatment and for another group after treatment). we therefore use an experimental design which takes the above constraints into account but which can easily be adapted for environments in which the constraints do not hold. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_16769",
        "graph": {
            "node_idx": 16769,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16769
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: hashing a source with an unknown probability distributionrenyi entropy of order 2 characterizes how many almost uniform random bits can be extracted from a distribution by universal hashing by a technique known as \"privacy amplification\" in cryptography. we generalize this result and show that if p s is the assumed distribution of a random variable with true distribution p x , then the amount of extractable almost uniform randomness corresponds to log p[x = s], when x and s are interpreted as independent random variables. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_16813",
        "graph": {
            "node_idx": 16813,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16813
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: using errors to create piecewise learnable partitionsin this paper we describe an algorithm which exploits the error distribution generated by a learning algorithm in order to break up the domain which is being approximated into piecewise learnable partitions. traditionally, the error distribution has been neglected in favor of a lump error measure such as rms. by doing this, however, we lose a lot of important information. the error distribution tells us where the algorithm is doing badly, and if there exists a \"ridge\" of errors, also tells us how to partition the space so that one part of the space will not interfere with the learning of another. the algorithm builds a variable arity k-d tree whose leaves contain the partitions. using this tree, new points can be predicted using the correct partition by traversing the tree. we instantiate this algorithm using memory based learners and cross-validation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_16816",
        "graph": {
            "node_idx": 16816,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16816
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: an interactive computer model for defibrillation device designwe have developed an interactive computer model for defibrillation device design utilzing the utah torso model [1]. this system allows researchers to interactively design and place electrodes into a high-resolution finite element model of the human thorax to investigate fields generated from electrical shocks. several quantitative measures are used to determine the efficacy of different electrode configurations thus providing a useful tool for evaluating a wide variety of electrode configurations in an efficient manner. currently the most promising electrode configuration candidates are being tested in animals as well as in clinical enviroments. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_16852",
        "graph": {
            "node_idx": 16852,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16852
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: representational eclecticism a foundation stone for the new ai?in this paper i support the view that neural networks and connectionism constitute a `new ai' but argue that the new field incorporates both the reactive systems movement and work on genetic algorithms. the common theme in these approaches is, i propose, the idea that cognitive agents may use representations in an eclectic and opportunistic fashion rather than in the neatly structured manner proposed by classical ai. the way in which this idea is being developed (in connectionism) is considered and the outstanding problems are illustrated using a simulation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_16865",
        "graph": {
            "node_idx": 16865,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16865
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: aucs/tr9405 building agent-based systemsone major focus of effort in distributed artificial intelligence (dai) research has been the development of software environments which support the construction of systems involving multiple interacting agents. such systems can be divided into experimental testbeds and frameworks for building agent-based applications. this document reviews and compares a number of systems from both categories. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, agents"
            }
        ]
    },
    {
        "id": "cora_test_16970",
        "graph": {
            "node_idx": 16970,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                16970
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: theoretical models of learning to learn editor:a machine can only learn if it is biased in some way. typically the bias is supplied by hand, for example through the choice of an appropriate set of features. however, if the learning machine is embedded within an environment of related tasks, then it can learn its own bias by learning sufficiently many tasks from the environment [4, 6]. in this paper two models of bias learning (or equivalently, learning to learn) are introduced and the main theoretical results presented. the first model is a pac-type model based on empirical process theory, while the second is a hierarchical bayes model. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17049",
        "graph": {
            "node_idx": 17049,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17049
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a fast, bottom-up decision tree pruning algorithm with near-optimal generalizationin this work, we present a new bottom-up algorithm for decision tree pruning that is very efficient (requiring only a single pass through the given tree), and prove a strong performance guarantee for the generalization error of the resulting pruned tree. we work in the typical setting in which the given tree t may have been derived from the given training sample s, and thus may badly overfit s. in this setting, we give bounds on the amount of additional generalization error that our pruning suffers compared to the optimal pruning of t . more generally, our results show that if there is a pruning of t with small error, and whose size is small compared to jsj, then our algorithm will find a pruning whose error is not much larger. this style of result has been called an index of resolvability result by barron and cover in the context of density estimation. a novel feature of our algorithm is its locality | the decision to prune a subtree is based entirely on properties of that subtree and the sample reaching it. to analyze our algorithm, we develop tools of local uniform convergence, a generalization of the standard notion that may prove useful in other settings. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17082",
        "graph": {
            "node_idx": 17082,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17082
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: fundamental laws and assumptions of software maintenanceresearchers must pay far more attention to discovering and validating the principles that underlie software maintenance and evolution. this was one of the major conclusions reached during the international workshop on empirical studies of software maintenance. this workshop, held in november 1996 in monterey, california, brought together an international group of researchers to discuss the successes, challenges and open issues in software maintenance and evolution. this article documents the discussion of the subgroup on fundamental laws and assumptions of software maintenance. the participants of this group included researchers in software engineering, the behavioral sciences, information systems and statistics. their main conclusion was that insufficient effort has been paid to synthesizing research conjectures into validated theories and that this problem has slowed progress in software maintenance. to help remedy this situation they made the following recommendations: (1) when we use empirical methods, an explicit goal should be to develop theories, (2) we should look to other disciplines for help where it is appropriate, and (3) our studies should use a wider range of empirical methods. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, software development"
            }
        ]
    },
    {
        "id": "cora_test_17085",
        "graph": {
            "node_idx": 17085,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17085
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: learning logic programs with random classification noiseresearch group on artificial intelligence, hungarian academy of sciences in proc. 6th international workshop on inductive logic programming (ilp-96), pages 97-118 of stockholm university dept. of comuputer and system sciences tech. report version of proceedings, august, 1996. springer-verlang lecture notes in computer science volume version of proceedings is forthcoming. abstract. we consider the learnability of classes of logic programs in the presence of noise, assuming that the label of each example is reversed with a fixed probability. we review the polynomial pac learnability of nonrecursive, determinate, constant-depth horn clauses in the presence of such noise. this result is extended to an analogous class of recursive logic programs that consist of a recursive clause, a base case clause, and ground background knowledge. also, we show that arbitrary nonrecur-sive horn clauses with forest background knowledge remain polynomially pac learnable in the presence of noise. we point out that the sample size can be decreased by using dependencies among the literals. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17124",
        "graph": {
            "node_idx": 17124,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17124
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: sparse filter banks for binary subdivision schemesmulti-resolution analysis (mra) produces a hierarchical basis for representing functions. this basis can be used to improve the efficiency of many algorithms for computing with those functions. traditionally, these basis functions are translates and dilates of a single function. in this paper, we outline a generalization of mra to those functions defined by binary subdivision schemes. although the mathematical underpinnings of mra are somewhat involved, the resulting algorithms are quite simple. we start with a brief intuitive description of how the method can be applied to decompose the polyhedral object shown in figure 1(a). the main idea behind mra is the decomposition of an object, in this case a polyhedron, into a low resolution part and a \"detail\" part. the low resolution part of the polyhedron in figure 1(a) is shown in figure 1(b). the vertices in (b) are computed as certain weighted averages of the vertices in (a). these weighted averages essentially implement a low pass filter denoted as a. the detail part consists of a collection of fairly abstract coefficients, called wavelet coefficients, that are also computed as weighted averages of the \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17126",
        "graph": {
            "node_idx": 17126,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17126
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: miketalk: a talking facial display based on morphing visemeswe present miketalk, a text-to-audiovisual speech synthesizer which converts input text into an audiovisual speech stream. miketalk is built using visemes, which are a set of images spanning a large range of mouth shapes. the visemes are acquired from a recorded visual corpus of a human subject which is specifically designed to elicit one instantiation of each viseme. using optical flow methods, correspondence from every viseme to every other viseme is computed automatically. by morphing along this correspondence, a smooth transition between viseme images may be generated. a complete visual utterance is constructed by concatenating viseme transitions. finally, phoneme and timing information extracted from a text-to-speech synthesizer is exploited to determine which viseme transitions to use, and the rate at which the morphing process should occur. in this manner, we are able to synchronize the visual speech stream with the audio speech stream, and hence give the impression of a photorealis-tic talking face. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17247",
        "graph": {
            "node_idx": 17247,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17247
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: online learning versus o*ine learningwe present an off-line variant of the mistake-bound model of learning. just like in the well studied on-line model, a learner in the offline model has to learn an unknown concept from a sequence of elements of the instance space on which he makes \"guess and test\" trials. in both models, the aim of the learner is to make as few mistakes as possible. the difference between the models is that, while in the on-line model only the set of possible elements is known, in the off-line model the sequence of elements (i.e., the identity of the elements as well as the order in which they are to be presented) is known to the learner in advance. we give a combinatorial characterization of the number of mistakes in the off-line model. we apply this characterization to solve several natural questions that arise for the new model. first, we compare the mistake bounds of an off-line learner to those of a learner learning the same concept classes in the on-line scenario. we show that the number of mistakes in the on-line learning is at most a log n factor more than the off-line learning, where n is the length of the sequence. in addition, we show that if there is an off-line algorithm that does not make more than a constant number of mistakes for each sequence then there is an online algorithm that also does not make more than a constant number of mistakes. the second issue we address is the effect of the ordering of the elements on the number of mistakes of an off-line learner. it turns out that there are sequences on which an off-line learner can guarantee at most one mistake, yet a permutation of the same sequence forces him to err on many elements. we prove, however, that the gap, between the off-line mistake bounds on permutations of the same sequence of n-many elements, cannot be larger than a multiplicative factor of log n, and we present examples that obtain such a gap. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17261",
        "graph": {
            "node_idx": 17261,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17261
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: communication protocols for a fault tolerant automated highway systemwe present the design and verification of inter-vehicle communication protocols for the operation of an automated highway system (ahs) in the presence of faults. we consider various hardware faults that can develop on the automated vehicle on an ahs. our design consists of discrete event supervisory controllers to stop the faulty vehicle or take it out of the highway in a safe manner. because these actions require cooperation between vehicles in the neighborhood of the faulty vehicle, the supervisory controllers are implemented by means of communication protocols. the logical correctness of the proposed protocols is verified using computational verification tools. we discuss the safety of the proposed design and highlight the problems associated with carrying out a complete safety analysis. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_17288",
        "graph": {
            "node_idx": 17288,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17288
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a wrapper approach for constructive inductioninductive algorithms rely strongly on their representational biases. representational inadequacy can be mitigated by constructive induction. this paper introduces the notion of a relative gain measure and describes a new constructive induction algorithm (gala) which is independent of the learning algorithm. gala generates a small number of new boolean attributes from existing boolean, nominal or real-valued attributes. unlike most previous research on constructive induction, our methods are designed as preprocessing step before standard machine learning algorithms are applied. we present results which demonstrate the effectiveness of gala on both artificial and real domains for both symbolic and subsymbolic learners. for symbolic learners, we used c4.5 and cn2. for subsymbolic learners, we used perceptron and backpropagation. in all cases, the gala preprocessor increased the performance of the learning algorithm. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17317",
        "graph": {
            "node_idx": 17317,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17317
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: extending atm networks for efficient reliable multicastone of the important features of atm networks is their ability to support multicast communication. this facilitates the efficient distribution of multimedia information streams (such as audio and video) to large groups of receivers (potentially millions). because atm networks do not provide reliable delivery mechanisms, it is up to end systems to provide end-to-end reliability where it is needed. while this is straightforward for point-to-point virtual circuits, it is more difficult for one-to-many and many-to-many virtual circuits. in this report, we propose some minimal extensions to the hardware of atm switches that enables end systems to implement reliable multicast in a more efficient and scalable manner than is otherwise possible. our approach makes the amount of work that must be done by any end system essentially independent of of the number of multicast participants, while requiring no complex processing at the switches. we propose solutions for both one-to-many and many-to-many multicast virtual circuits. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_17318",
        "graph": {
            "node_idx": 17318,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17318
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: buffer requirements in atm networks with leaky bucketsfor an atm network with guaranteed quality of service, we present traffic scenarios showing that the buffer size allocation requirements at various hops through the network may grow unexpectedly high for a zero loss quality of service. this occurs even if one uses peak load allocation and the traffic patterns entering the network are well regulated and conform to the agreed rates. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "networking, protocols"
            }
        ]
    },
    {
        "id": "cora_test_17378",
        "graph": {
            "node_idx": 17378,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17378
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: guiding or hiding: explorations into the effects of learning on the rate of evolution.individual lifetime learning can `guide' an evolving population to areas of high fitness in genotype space through an evolutionary phenomenon known as the baldwin effect (baldwin, 1896; hin-ton & nowlan, 1987). it is the accepted wisdom that this guiding speeds up the rate of evolution. by highlighting another interaction between learning and evolution, that will be termed the hiding effect, it will be argued here that this depends on the measure of evolutionary speed one adopts. the hiding effect shows that learning can reduce the selection pressure between individuals by `hiding' their genetic differences. there is thus a trade-off between the baldwin effect and the hiding effect to determine learning's influence on evolution and two factors that contribute to this trade-off, the cost of learning and landscape epis tasis, are investigated experimentally. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_17420",
        "graph": {
            "node_idx": 17420,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17420
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: uflic: a line integral convolution algorithm for visualizing unsteady flowsthis paper presents an algorithm, uflic (unsteady flow lic), to visualize vector data in unsteady flow fields. using the line integral convolution(lic) as theunderlyingmethod, a new convolution algorithm is proposed that can effectively trace the flow's global features over time. the new algorithm consists of a time-accurate value depositing scheme and a successive feed-forward method. the value depositingscheme accurately models the flow advection, and the successive feed-forward method maintains the coherence between animation frames. our new algorithm can produce time-accurate, highly coherent flow animations to highlight global features in unsteady flow fields. cfd scientists, for the first time, are able to visualize unsteadysurface flows using our algorithm. cr categories and subject descriptors: i.3.3 [computer graphics]: picture/imagegeneration; i.3.6[computer graphics]: methodology and techniques; i.4.3 [image processing]: enhancement. additional keywords: flow visualization, vector field visualization, image convolution, line integral convolution, flow animation, unsteadyflows, surface flows, texture synthesis. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17467",
        "graph": {
            "node_idx": 17467,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17467
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: fast (distribution specific) learningpac-learning results are often criticized for demanding impractically large training samples. the common wisdom is that these large samples follow from the worst case nature of the analysis, and therefore pac-learning, though desirable, must not be a practical goal. we however consider an alternative view: perhaps these large sample sizes are due to the presumed learning strategies which make inefficient use of the available training data. to demonstrate this, we consider sequential learning strategies that autonomously decide when to stop training based on observing training examples as they arrive. we show that for distribution specific learning these algorithms require far fewer training examples (on average) than existing fixed sample size approaches, and are able to learn with certainty not just high probability. in fact, a simple sequential strategy is optimally efficient in many cases. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17470",
        "graph": {
            "node_idx": 17470,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17470
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: end-to-end design of real-time systemsthis chapter presents a comprehensive design methodology for guaranteeing end-to-end requirements of real-time systems. applications are structured as a set of process components connected by asynchronous channels, in which the endpoints are the system's external inputs and outputs. timing constraints are then postulated between these inputs and outputs; they express properties such as end-to-end propagation delay, temporal input-sampling correlation, and allowable separation times between updated output values. the automated design method works as follows: first new tasks are created to correlate related inputs, and an optimization algorithm, whose objective is to minimize cpu utilization, transforms the end-to-end requirements into a set of intermediate rate constraints on the tasks. if the algorithm fails, a restructuring tool attempts to eliminate bottlenecks by transforming the application, which is then re-submitted into the assignment algorithm. the final result is a schedulable set of fully periodic tasks, which collaboratively maintain the end-to-end constraints. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_17508",
        "graph": {
            "node_idx": 17508,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17508
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: multiresolution banded refinement to accelerate surface reconstruction from polygonswe propose a method for constructing a tiling between a pair of planar polygons. our technique uses multiresolution: tilings of lower resolution polygons are used to construct a tiling for the full resolution polygons. the tilings are constructed using restricted dynamic programming called banded refinement in roughly linear time and space. by contrast, the optimal dynamic programming method requires quadratic time and space. in our empirical study of surface reconstruction of brain contours our algorithm exhibited significant speedup over the optimal dynamic program, yet nearly always achieved the optimal reconstruction. our approach appears to be generalizable to other geometric problems solvable by dynamic programming, and flexible enough to be tuned to varying data set characteristics. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17542",
        "graph": {
            "node_idx": 17542,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17542
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: generating a product of three primes with an unknown factorizationwe describe protocols for three or more parties to jointly generate a composite n = pqr which is the product of three primes. after our protocols terminate n is publicly known, but neither party knows the factorization of n . our protocols require the design of a new type of distributed primality test for testing that a given number is a product of three primes. we explain the cryptographic motivation and origin of this problem. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_17569",
        "graph": {
            "node_idx": 17569,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17569
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a bound on the approximation order of surface splinesthe functions m := j j 2md if d is odd, and m := j j 2md log j j if d is even, are known as surface splines, and are commonly used in the interpolation or approximation of smooth functions. we show that if one's domain is the unit ball in r d , then the approximation order of the translates of m is at most m. this is in contrast to the case when the domain is all of r d where it is known that the approximation order is exactly 2m. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17613",
        "graph": {
            "node_idx": 17613,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17613
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a run-time decision procedure for responsive computing systemsa responsive computing system is a hybrid of real-time, distributed and fault-tolerant systems. in such a system, severe consequences will occur if the logical and physical specifications of the system are not met. in this paper, we present a logic, interval temporal logic (itl), to specify responsive computing systems and give a decision procedure to verify properties of the systems at run-time as follows. first, we specify properties of the system using itl formulas. next, we collect, at run-time, events and maintain equivalent event histories to represent system execution. finally, we apply a decision procedure to determine satisfaction of the formulas. the proposed decision procedure is essentially a run-time procedure which makes use of event histories computed during execution to verify properties of the system in the actual operational environment. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_17659",
        "graph": {
            "node_idx": 17659,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17659
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a survey of formal methods for software re-engineeringas a consequence, various growing formal methods have been developed in improving normal software development, most of which are focused on forward engineering. in contrast to forward engineering, the issue of applying formal methods in software re-engineering has been rarely explored. due to the distinct features of formal methods, e.g. rigorousness and automation, we believe that there is a tremendous future in integrating formal methods with software re-engineering technology. in this survey, we investigate the general state of formal technology and software re-engineering, propose a set of criteria of formal methods for software re-engineering. among the vast world of formal technology, we classify the existent formalisms into five categories, i.e. model-based approaches, logic-based approaches, algebraic approaches, process algebra approaches and net-based approaches. a general introduction of the most popular formalisms in each category is presented, which includes references, a brief description of syntax and semantics, and an assessment. detailed discussion (which is called sample description) is given to a few formalisms which may be suitable for being the foundation of certain software re-engineering approaches. based on the proposed criteria, conclusions, including contrasts and comparisons of these formal methods, are made out. although only a very few formalisms have been applied as the theoretic foundation of re-engineering, some of them already reveal a promising future, such as z and itl. we also investigate the current state of the relevant projects in the later section. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_17713",
        "graph": {
            "node_idx": 17713,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17713
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: expressing temporal behavior declarativelythe programming language arctic specifies real-time behavior declaratively by using temporal control constructs and by indicating starting times and durations explicitly, much the way timing is specified in a cue sheet or a musical score. values in arctic are functions of time, which may be combined with various arithmetic and logical operators. since arctic is a single assignment language, the execution order is implied by data dependencies, simplifying synchronization problems for the programmer. arctic supports behavioral abstraction, in which a single program module gives rise, through various transformations, to a class of behaviors. an implementation of arctic is described, and experience with the declarative approach to real-time control is discussed. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_17734",
        "graph": {
            "node_idx": 17734,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17734
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: use of computer graphic simulation to explain color histogram structurein this paper, we discuss the use of computer graphics techniques to model and explain the structures commonly observed in color histograms of images. this includes an accurate simulation of the physical reflection and transport behavior of light energy within 3d environments, the precise modeling of an image capturing system, and an interactive visualization module to display color histograms. based on the fundamental rendering equation that describes light reflection and transport in the 3d world, we classify the color histogram structures of color images, and relate them to various physical components in image formation, including scene illumination, material reflectance properties, and the surface geometry of objects. we further show how these histogram structures can be effected by the artifacts caused by the limitation of image capturing systems. our results demonstrate that the use of accurate simulation procedures under a precisely controlled computer graphic environment can clearly illustrate the causes of the structures observed, and can provide unique insights and explanations of image formation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17740",
        "graph": {
            "node_idx": 17740,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17740
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: monitoring in embedded agentsfinding good monitoring strategies is an important process in the design of any embedded agent. we describe the nature of the monitoring problem, point out what makes it difficult, and show that while periodic monitoring strategies are often the easiest to derive, they are not always the most appropriate. we demonstrate mathematically and empirically that for a wide class of problems, the so-called \"cupcake problems\", there exists a simple strategy, interval reduction, that outperforms periodic monitoring. we also show how features of the environment may influence the choice of the optimal strategy. the paper concludes with some thoughts about a monitoring strategy taxonomy, and what its defining features might be. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_17825",
        "graph": {
            "node_idx": 17825,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17825
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: naive bayesian classifier committeesthe naive bayesian classifier provides a very simple yet surprisingly accurate technique for machine learning. some researchers have examined extensions to the naive bayesian classifier that seek to further improve the accuracy. for example, a naive bayesian tree approach generates a decision tree with one naive bayesian classifier at each leaf. another example is a constructive bayesian classifier that eliminates attributes and constructs new attributes using cartesian products of existing attributes. this paper proposes a simple, but effective approach for the same purpose. it generates a naive bayesian classifier committee for a given classification task. each member of the committee is a naive bayesian classifier based on a subset of all the attributes available for the task. during the classification stage, the committee members vote to predict classes. experiments across a wide variety of natural domains show that this method significantly increases the prediction accuracy of the naive bayesian classifier on average. it performs better than the two approaches mentioned above in terms of higher prediction accuracy. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_17865",
        "graph": {
            "node_idx": 17865,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17865
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: cs585 term-paper dynamic simulation methods for animation of legged locomotionthe modeling of legged locomotion is of central importance to the successful animation of human and animal figures. since legged locomotion is typically difficult to animate using only kinematic modeling, alternative, more physically-based methods have to be employed. this paper discusses several methods for dynamic simulation of legged locomotion. typical components of a dynamic simulation system are outlined, and a number of successful applications are reviewed. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_17919",
        "graph": {
            "node_idx": 17919,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                17919
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: learning distributions from random walkswe introduce a new model of distributions generated by random walks on graphs. this model suggests a variety of learning problems, using the definitions and models of distribution learning defined in [6]. our framework is general enough to model previously studied distribution learning problems, as well as to suggest new applications. we describe special cases of the general problem, and investigate their relative difficulty. we present algorithms to solve the learning problem under various conditions. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_18154",
        "graph": {
            "node_idx": 18154,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18154
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: creative conceptual changefl we thank mike cox, eric domeshek, and janet kolodner for their comments on earlier drafts of this article, ron arkin for his help with the robotics project, and anthony francis for his help with the story understanding project. the research was supported by advanced research projects agency, monitored by the office of naval research, by the army research laboratory, by a fannie and john hertz foundation fellowship, and by the georgia institute of technology. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_18156",
        "graph": {
            "node_idx": 18156,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18156
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: related-key cryptanalysis of 3-way, biham-des,cast, des-x, newdes, rc2, and teawe present new related-key attacks on the block ciphers 3-way, biham-des, cast, des-x, newdes, rc2, and tea. differential related-key attacks allow both keys and plaintexts to be chosen with specific differences [ksw96]. our attacks build on the original work, showing how to adapt the general attack to deal with the difficulties of the individual algorithms. we also give specific design principles to protect against these attacks. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_18161",
        "graph": {
            "node_idx": 18161,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18161
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: case-based planning to learnlearning can be viewed as a problem of planning a series of modifications to memory. we adopt this view of learning and propose the applicability of the case-based planning methodology to the task of planning to learn. we argue that relatively simple, fine-grained primitive inferential operators are needed to support flexible planning. we show that it is possible to obtain the benefits of case-based reasoning within a planning to learn framework. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_18222",
        "graph": {
            "node_idx": 18222,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18222
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: distributed real-time computer systemsdistributed computer systems and real-time computer systems match each other in a number of ways. the nature of the real-time computer systems, which have to react to and process numerous events simultaneously, is inherently concurrent and also those systems are spatially distributed because the devices for interaction with the environment are usually situated at more or less remote locations. distributed computer systems offer the flexibility, scalability and performance demanded by the new generation of complex real-time applications. their replicated resources are valuable provision for dependable and safety-critical real-time processing. the primary goal of this report is to study the relevant issues in distributed real-time systems, to uncover the state-of-the-art and then to present a critical view and summarize the problems that are still to be resolved. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_18336",
        "graph": {
            "node_idx": 18336,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18336
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: renesting single appearance schedules to minimize buffer memorya portion of this research was undertaken as part of the ptolemy project, which is supported by the advanced research projects agency and the u. s. air force (under the rassp program, contract f33615-93-c-1317), semiconductor research corporation (project 94-dc-008), national science foundation (mip-9201605), office of naval technology (via naval research laboratories), the state of cali-fornia micro program, and the following companies: bell northern research, dolby, hitachi, mentor graphics, mitsubishi, nec, pacific bell, philips, rockwell, sony, and synopsys. abstract minimizing memory requirements for program and data are critical objectives when synthesizing software for embedded dsp applications. in prior work, it has been demonstrated that for graphical dsp programs based on the widely-used synchronous dataow model, an important class of minimum code size implementations can be viewed as parenthesizations of lexical order-ings of the computational blocks. such a parenthesization corresponds to the hierarchy of loops in the software implementation. in this paper, we present a dynamic programming technique for constructing a parenthesization that minimizes data memory cost from a given lexical ordering of a synchronous dataow graph. for graphs that do not contain delays on the edges, this technique always constructs a parenthesization that has minimum data memory cost from among all paren-thesizations for the given lexical ordering. when delays are present, the technique may make refinements to the lexical ordering while it is computing the parenthesization, and the data memory cost of the result is guaranteed to be less than or equal to the data memory cost of all valid parenthesizations for the initial (input) lexical ordering. thus, our dynamic programming technique can be used to post-optimize the output for any algorithm that schedules sdf graphs into minimum code size loop hierarchies. on several practical examples, we demonstrate that significant improvement can be gained by such post-optimization when applied to two scheduling techniques that have been developed earlier. that is, the result of each scheduling algorithm combined with the post-optimization often requires significantly less data memory than the result of the scheduling algorithm without post-optimization. we also present an adaptation of our dynamic programming technique for post-optimizing an arbitrary (not necessarily minimum code size) schedule to optimally reduce the code size. ucb/erl technical report, memorandum no. ucb/erl m95/43, electronics research laboratory, college of engineering, university of california, berkeley, ca 94720 \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_18363",
        "graph": {
            "node_idx": 18363,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18363
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: making dna computers error resistantwe describe methods for making volume decreasing algorithms more resistant to certain types of errors. such error recovery techniques are crucial if dna computers ever become practical. our first approach relies on applying pcr at various stages of the computation. we analyze its performance and show that it increases the survival-probability of various strands to acceptable proportions. our second approach relies on changing the method by which information is encoded on dna strands. this encoding is likely to reduce false negative errors during the bead separation procedure. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "encryption and compression, encryption"
            }
        ]
    },
    {
        "id": "cora_test_18383",
        "graph": {
            "node_idx": 18383,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18383
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: inducing diagnostic inference models from case datarecent attention to using case-based reasoning for intelligent fault diagnosis has led to the development of very large, complex databases of diagnostic cases. the performance of case-based reasoners is dependent upon the size of the case base such that as case bases increase in size, it is usually reasonable to expect accuracy to improve but computational performance to degrade. given one of these large case bases, it is advantageous to attempt to induce structure from the case base whereby the diagnostic process can be made more efficient. in addition, certainty properties of case based reasoning make fault diagnosis difficult, in which case inducing structure and applying a method for reasoning under uncertainty becomes advantageous. in this chapter, we discuss an approach to analyzing a diagnostic case base and inducing a compact knowledge base using the diagnostic inference model with which efficient diagnostics can be performed. we then apply an approach to reasoning using dempster-shafer theory to improve the diagnostics using the resultant model. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_18391",
        "graph": {
            "node_idx": 18391,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18391
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the omnipresence of case-based reasoning in science and applicationa surprisingly large number of research disciplines have contributed towards the development of knowledge on lazy problem solving, which is characterized by its storage of ground cases and its demand driven response to queries. case-based reasoning (cbr) is an alternative, increasingly popular approach for designing expert systems that implements this approach. this paper lists pointers to some contributions in some related disciplines that offer insights for cbr research. we then outline a small number of navy applications based on this approach that demonstrate its breadth of applicability. finally, we list a few successful and failed attempts to apply cbr, and list some predictions on the future roles of cbr in applications. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_18408",
        "graph": {
            "node_idx": 18408,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18408
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: learning when to trust which expertsthe standard model for prediction using a pool of experts has an underlying assumption that one of the experts performs well. in this paper, we show that this assumption does not take advantage of situations where both the outcome and the experts' predictions are based on some input which the learner gets to observe too. in particular, we exhibit a situation where each individual expert performs badly but collectively they perform well, and show that the traditional weighted majority techniques perform poorly. to capture this notion of `the whole is often greater than the sum of its parts', we propose an approach to measure the overall competency of a pool of experts with respect to a competency class or structure. a competency class or structure is a set of decompositions of the instance space where each expert is associated with a `competency region' in which we assume he is competent. our goal is to perform close to the performance of a predictor who knows the best decomposition in the competency class or structure where each expert performs reasonably well in its competency region. we present both positive and negative results in our model. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, theory"
            }
        ]
    },
    {
        "id": "cora_test_18419",
        "graph": {
            "node_idx": 18419,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18419
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: modeling ill-structured optimization tasks through casescabins is a framework of modeling an optimization task in ill-structured domains. in such domains, neither systems nor human experts possess the exact model for guiding optimization. and the user's model of optimality is subjective and situation-dependent. cabins optimizes a solution through iterative revision using case-based reasoning. in cabins, task structure analysis was adopted for creating an initial model of the optimization task. generic vocabularies found in the analysis were specialized into case feature descriptions for application problems. extensive experimentation on job shop scheduling problems has shown that cabins can operationalize and improve the model through the accumulation of cases. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_18519",
        "graph": {
            "node_idx": 18519,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18519
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: final iterations in interior point methods preconditioned conjugate gradients and modified search directionsin this article we consider modified search directions in the endgame of interior point methods for linear programming. in this stage, the normal equations determining the search directions become ill-conditioned. the modified search directions are computed by solving perturbed systems in which the systems may be solved efficiently by the preconditioned conjugate gradient solver. we prove the convergence of the interior point methods using the modified search directions and show that each barrier problem is solved with a superlinear convergence rate. a variation of cholesky factorization is presented for computing a better preconditioner when the normal equations are ill-conditioned. these ideas have been implemented successfully and the numerical results show that the algorithms enhance the performance of the preconditioned conjugate gradients-based interior point methods. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_18524",
        "graph": {
            "node_idx": 18524,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18524
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: linear radiosity with error estimationwe present a simple and inexpensive method for computing the estimates of error in a hierarchical linear radiosity method. similar to the approach used in [1] for constant radiosity method, we compute lower and upper linear bounds of the actual radiosity function over the surface elements. we carry out this by computing linear upper and lower bounds of the kernel of the radiosity equation. also we compute these bounds in a form which makes trivial the effort of projecting the integral equation involving such kernels. we provide the hierarchical algorithm for computing the radiosity bounds. we derive the expression for computing error-estimates from these bounds. finally we propose a refinement indicator for carrying out the link refinement. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "human computer interaction, graphics and virtual reality"
            }
        ]
    },
    {
        "id": "cora_test_18535",
        "graph": {
            "node_idx": 18535,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18535
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: four challenges for a computational model of legal precedentidentifying the open research issues in a field is a necessary step for progress in that field. this paper describes four open research problems in computational models of precedent-based legal reasoning: relating case representation to precedent use; modeling the selection and construction of both arguments based on pairwise case comparison and multiple-precedent arguments; modeling the process whereby purposes, policies, and principles are used in case similarity assessment; and extending the applicability of precedents to tasks other than classification. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_18920",
        "graph": {
            "node_idx": 18920,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                18920
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: optimizing synchronization in multiprocessor dsp systemsthis paper is concerned with multiprocessor implementations of embedded applications specified as iterative dataow programs, in which synchronization overhead can be significant. we develop techniques to alleviate this overhead by determining a minimal set of processor synchronizations that are essential for correct execution. our study is based in the context of self-timed execution of iterative data-ow programs. an iterative dataow program consists of a dataow representation of the body of a loop that is to be iterated an indefinite number of times; dataow programming in this form has been studied and applied extensively, particularly in the context of signal processing software. self-timed execution refers to a combined compile-time/run-time scheduling strategy in which processors synchronize with one another only based on inter-processor communication requirements, and thus, synchronization of processors at the end of each loop iteration does not generally occur. we introduce a new graph-theoretic framework, based on a data structure called the synchronization graph, for analyzing and optimizing synchronization overhead in self-timed, iterative dataow programs. we show that the comprehensive techniques that have been developed for removing redundant synchronizations in non-iterative programs can be extended in this framework to optimally remove redundant synchronizations in our context. we also present an optimization that converts a feedforward dataow graph into a strongly connected graph in such a way as to reduce synchronization overhead without slowing down execution. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_19004",
        "graph": {
            "node_idx": 19004,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19004
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the startech massively parallel chess programthe startech massively parallel chess program, running on a 512-processor connection machine cm-5 supercomputer, tied for third place at the 1993 acm international computer chess championship. startech employs the jamboree search algorithm, a natural extension of j. pearl's scout search algorithm, to find parallelism in game-tree searches. startech's work-stealing scheduler distributes the work specified by the search algorithm across the processors of the cm-5. startech uses a global transposition table shared among the processors. startech has an informally estimated rating of over 2400 uscf. two performance measures help in understanding the performance of the startech program: the work, w , and the critical path length, c. the jamboree search algorithm used in startech seems to perform about 2 to 3 times more work than does our best serial implementation. the critical path length, under tournament conditions, is less than 0.1% of the total work, yielding an average parallelism of over 1000. the startech scheduler achieves actual performance of approximately t 1:02w=p + 1:5c on p processors. the critical path and work can be used to tune performance by allowing development of the program on a small, readily accessable, machine while predicting the performance on a big, tournament-sized, machine. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_19150",
        "graph": {
            "node_idx": 19150,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19150
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: fara a framework for adaptive resource allocation in complex real-time systemsthis paper introduces fara, a framework that provides abstractions and mechanisms for building integrated adaptation and resource allocation services in complex real-time systems. fara's design addresses (1) the specification of the adaptation capabilities of general-domain applications with multiple adaptive components and (2) the control of the adaptation impact on the satisfiabil-ity of an application's timing constraints during its transition to targeted steady state. we propose to use of a hierarchical adaptation model, to control the adaptation enactment overhead based on the costs of executing the application-specific adaptation procedures, and to reduce the decision overhead by use of effective solutions for mechanisms frequently invoked during the decision process, such as the decision context management and the allocation decision evaluation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_19169",
        "graph": {
            "node_idx": 19169,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19169
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: on the performance of polynomial-time clique approximation algorithms on very large graphsthe performance of a randomized version of the subgraph-exclusion algorithm (called ramsey) for clique by boppana and halldorsson is studied on very large graphs. we compare the performance of this algorithm with the performance of two common heuristic algorithms, the greedy heuristic and a version of simulated annealing. these algorithms are tested on graphs with up to 10,000 vertices on a workstation and graphs as large as 70,000 vertices on a connection machine. our implementations establish the ability to run clique approximation algorithms on very large graphs. we test our implementations on a variety of different graphs. our conclusions indicate that on randomly generated graphs minor changes to the distribution can cause dramatic changes in the performance of the heuristic algorithms. the ramsey algorithm, while not as good as the others for the most common distributions, seems more robust and provides a more even overall performance. in general, and especially on deterministically generated graphs, a combination of simulated annealing with either the ramsey algorithm or the greedy heuristic seems to perform best. this combined algorithm works particularly well on large keller and hamming graphs and has a competitive overall performance on the dimacs benchmark graphs. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_19332",
        "graph": {
            "node_idx": 19332,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19332
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a computational account of movement learning and its impact on the speed-accuracy tradeoffwe present a computational model of movement skill learning. the types of skills addressed are a class of trajectory following movements involving multiple accelerations, decelerations and changes in direction and lasting more than a few seconds. these skills are acquired through observation and improved through practice. we also review the speed-accuracy tradeoff|one of the most robust phenomena in human motor behavior. we present two speed-accuracy tradeoff experiments where the model's performance fits human behavior quite well. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_19345",
        "graph": {
            "node_idx": 19345,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19345
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: co-design of a fault-tolerant communication protocola case studyhardware/software co-design is a design technology that supports the integrated development of hardware and software components of a system. a special focus of the work described here is the application domain of safety-critical embedded systems. in addition to the raised abstraction level and shortened design time offered by co-design relative to conventional design methods, we are therefore particularly interested in paradigms based on formal models. this paper gives a brief overview of a co-design case study based on an application typical for safety-critical applications. we compared two ways of designing embedded systems: statemate, a commercial system design tool based on statecharts, and polis/ptolemy, with esterel as a specification language. we describe our design experiences and give preliminary experimental results. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_19375",
        "graph": {
            "node_idx": 19375,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19375
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: case-based sonogram classificationthis report replicates and extends results reported by naval air warfare center (nawc) personnel on the automatic classification of sonar images. they used novel case-based reasoning systems in their empirical studies, but did not obtain comparative analyses using standard classification algorithms. therefore, the quality of the nawc results were unknown. we replicated the nawc studies and also tested several other classifiers (i.e., both case-based and otherwise) from the machine learning literature. these comparisons and their ramifications are detailed in this paper. next, we investigated fala and walker's two suggestions for future work (i.e., on combining their similarity functions and on an alternative case representation). finally, we describe several ways to incorporate additional domain-specific knowledge when applying case-based classifiers to similar tasks. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_19489",
        "graph": {
            "node_idx": 19489,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19489
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: counting, structure identification and maximum consistency for binary constraint satisfaction problemsusing a framework inspired by schaefer's generalized satisfiability model [sch78], cooper, cohen and jeavons [ccj94] studied the complexity of constraint satisfaction problems in the special case when the set of constraints is closed under permutation of labels and domain restriction, and precisely identified the tractable (and intractable) cases. using the same model we characterize the complexity of three related problems: * counting the number of solutions. * structure identification (dechter and pearl [dp92]). * approximating the maximum number of satisfiable constraints. keywords: constraint satisfaction, counting, structure identification, approximation. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_19506",
        "graph": {
            "node_idx": 19506,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19506
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: online hard real-time scheduling for hypercube multiprocessorsscheduling sporadic tasks is a formidable problem in hard real-time systems, particularly multiprocessor systems. until now little research has addressed this problem for hypercube multiprocessors. in this paper we study two online scheduling algorithms - buddy/rt and stacking, for hard real-time environments which provide guarantees at the time of arrival of a task. buddy/rt is a straight-forward extension of the well-known buddy strategy to the real-time environment, while stacking is a more sophisticated algorithm based on the lessons learned from buddy/rt. the underlying concept behind the stacking algorithm is to reduce fragmentation by `stacking' equal-sized jobs in the time dimension. the performance of the two algorithms is compared through simulation studies. we find that the stacking algorithm performs significantly better than buddy/rt over a wide range of workloads, with no increase in complexity. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "operating systems, realtime"
            }
        ]
    },
    {
        "id": "cora_test_19643",
        "graph": {
            "node_idx": 19643,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19643
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: statistical, case-based and model-based prediction methodstech report tr-93-00, dept cs, univ. ottawa, canada, (1993) to appear in journal: fundamenta informatica (1996) http://www.cs.utexas.edu/users/pclark/papers/ccrs.ps.z abstract. evidence for image classification can be considered to come from two sources: traditional statistical information derived algorithmically from image data, and model-based evidence arising from previous expertise and experience in a given application domain. this paper presents a study of classification techniques based on both these sources (traditional algorithmic and model-based), and illustrates how they can be combined. a prototype image classification system, called cabaress, has been constructed which implements these methods. we evaluate cabaress as applied to the problem of identifying crops in agricultural fields, based on classifying image segments extracted from radar image data. our results demonstrate this mixed-method approach can achieve improved classificational accuracy. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_19866",
        "graph": {
            "node_idx": 19866,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                19866
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: dynamic statistics of sequential prologthis paper presents dynamic statistics taken by simulating sequential prolog programs. we used the warren's abstract machine (wam) as the abstract machine to simulate these programs. we show the dynamic data for the following areas: dereferencing chain, unification, trailing, untrailing, choice point creation, environment creation, backtracking, etc. this information can be useful for compiler writers and special purpose hardware designers to concentrate their effort toward those features of prolog that are more frequently used. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_20066",
        "graph": {
            "node_idx": 20066,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20066
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: an open-ended finite domain constraint solverwe describe the design and implementation of a finite domain constraint solver embedded in a prolog system using an extended unification mechanism via attributed variables as a generic constraint interface. the solver is essentially a scheduler for indexicals, i.e. reactive functional rules encoding local consistency methods performing incremental constraint solving or entailment checking, and global constraints, i.e. general propagators which may use specialized algorithms to achieve a higher degree of consistency or better time and space complexity. the solver has an open-ended design: the user can introduce new constraints, either in terms of indexicals by writing rules in a functional notation, or as global constraints via a prolog programming interface. constraints defined in terms of indexicals can be linked to 0/1-variables modeling entailment; thus indexicals are used for constraint solving as well as for entailment testing. constraints can be arbitrarily combined using the propositional connectives by automatic expansion to systems of reified constraints. keywords: implementation of constraint systems, constraint program ming, finite domains, indexicals, global constraints. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_20088",
        "graph": {
            "node_idx": 20088,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20088
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: numerical techniques for efficient sonar bearing and range searching in the near field using genetic algorithmsthis article describes a numerical method that may be used to efficiently locate and track underwater sonar targets in the near-field, with both bearing and range estimation, for the case of very large passive arrays. the approach used has no requirement for a priori knowledge about the source and uses only limited information about the receiver array shape. the role of sensor position uncertainty and the consequence of targets always being in the near-field are analysed and the problems associated with the manipulation of large matrices inherent in conventional eigenvalue type algorithms noted. a simpler numerical approach is then presented which reduces the problem to that of search optimization. when using this method the location of a target corresponds to finding the position of the maximum weighted sum of the output from all sensors. since this search procedure can be dealt with using modern stochastic optimization methods, such as the genetic algorithm, the operational requirement that an acceptable accuracy be achieved in real time can usually be met. the array studied here consists of 225 elements positioned along a flexible cable towed behind a ship with 3.4m between sensors, giving an effective aperture of 761.6m. for such a long array, the far field assumption used in most beam-forming algorithms is no longer appropriate. the waves emitted by the targets then have to be considered as curved rather than plane. it is shown that, for simulated data, if no significant noise \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_20100",
        "graph": {
            "node_idx": 20100,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20100
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: evolving multiagent coordination strategies with genetic programmingthe design and development of behavioral strategies to coordinate the actions of multiple agents is a central issue in multiagent systems research. we propose a novel approach of evolving, rather than handcrafting, behavioral strategies. the evolution scheme used is a variant of the genetic programming (gp) paradigm. as a proof of principle, we evolve behavioral strategies in the predator-prey domain that has been studied widely in the distributed artificial intelligence community. we use the gp to evolve behavioral strategies for individual agents, as prior literature claims that communication between predators is not necessary for successfully capturing the prey. the evolved strategy, when used by each predator, performs better than all but one of the handcrafted strategies mentioned in literature. we analyze the shortcomings of each of these strategies. the next set of experiments involve co-evolving predators and prey. to our surprise, a simple prey strategy evolves that consistently evades all of the predator strategies. we analyze the implications of the relative successes of evolution in the two sets of experiments and comment on the nature of domains for which gp based evolution is a viable mechanism for generating coordination strategies. we conclude with our design for concurrent evolution of multiple agent strategies in domains where agents need to communicate with each other to successfully solve a common problem. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_20181",
        "graph": {
            "node_idx": 20181,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20181
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: graph planarizationwe survey graph planarization and related problems. we first describe variants and applications of graph planarization. then we focus on algorithms. we begin by describing the branch-and-cut algorithm of junger and mutzel (1996). then, we review work on heuristics based on planarity testing and those based on two-phase procedures. finally, computational results comparing algorithms for graph planarization are presented. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_20269",
        "graph": {
            "node_idx": 20269,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20269
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: using the features fluents frameworkthis memo contains an overview of current and recent research in our laboratory related to the \"features and fluents\" approach. the current specific topics in this research are: \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_20314",
        "graph": {
            "node_idx": 20314,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20314
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: strategy adaptation by competing subpopulationsthe breeder genetic algorithm bga depends on a set of control parameters and genetic operators. in this paper it is shown that strategy adaptation by competing subpopulations makes the bga more robust and more efficient. each subpopulation uses a different strategy which competes with other subpopulations. numerical results are pre sented for a number of test functions. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_20316",
        "graph": {
            "node_idx": 20316,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20316
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: the application of a parallel genetic algorithm to the n=m=p=c max flowshop problemhard combinatorial problems in sequencing and scheduling led recently into further research of genetic algorithms. canonical coding of the symmetric tsp can be modified into a coding of the n-job m-machine flowshop problem, which configurates the solution space in a different way. we show that well known genetic operators act intelligently on this coding scheme. they implecitely prefer a subset of solutions which contain the probably best solutions with respect to an objective. we conjecture that every new problem needs a determination of this necessary condition for a genetic algorithm to work, i. e. a proof by experiment. we implemented an asynchronous parallel genetic algorithm on a unix-based computer network. computational results of the new heuristic are discussed. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, genetic algorithms"
            }
        ]
    },
    {
        "id": "cora_test_20337",
        "graph": {
            "node_idx": 20337,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20337
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: erratum to \"an sqp algorithm for finely discretized continuous minimax problems and other minimax problemsan error is pointed out in the local convergence proof in the quoted paper [siam j. optimization 6(1996), 461]. a correct proof is given. the proof of lemma 3.14 in [2] is incorrect. namely, proving the claim in the second sentence of the proof does not \"complete the proof\" as stated. to see this, note that the mathematical induction argument hinted at in that sentence merely proves that, for the infinite index set k whose existence is established by lemma 3.12, given any integer i, there exists k i such that max (x fl ) b nevertheless, the convergence results claimed in that section of [2] do hold true. a correct proof is obtained if lemmas 3.13, 3.14, and 3.15 in [2] are replaced with lemmas 3.13', 3.14', and 3.15' given below. (the statements of lemmas 3.14' and 3.15' are identical to those of lemmas 3.14 and 3.15, respectively, but the proofs are different.) the implicit assumptions required for the original lemmas 3.13-3.15 are still assumed to hold. h = fh = h t : 1 kdk 2 hd; hdi 2 kdk 2 8d 2 ir n g: then, for every * &gt; 0 there exists ffi &gt; 0 such that for every x with kx x fl k &lt; ffi, every h 2 h, and every ^ with max (x fl ) ^ , all ! 2 max (x fl ) are binding for qp (x; h; ^ ) and the unique kkt point d of qp (x; h; ^ ) satisfies kdk &lt; *. proof. given x with kx x fl k &lt; ffi, h 2 h, and ^ with max (x fl ) ^ , let d(x; h; ^ ) be the unique kkt point of qp (x; h; ^ ). then lemma 3.2 implies that d(x fl ; h; ^ ) = 0 for all h 2 h. since h is compact, in view of assumptions 4 and 5, it follows from a classical result of robinson's [1, theorem 2.1] that, given \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_20371",
        "graph": {
            "node_idx": 20371,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20371
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: intelligent agents for management of learning: an introduction and a case study for machine learningthis paper is published in the proceedings of the first flairs international workshop on intelligent adaptive systems (ias-95), pp. 95-106, melbourne beach, florida, april 19, 1995. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, machine learning, case-based"
            }
        ]
    },
    {
        "id": "cora_test_20379",
        "graph": {
            "node_idx": 20379,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20379
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: connected (g; f )-factors and supereulerian digraphsh (x) f(x)(g(x) d h (x) f(x), resp.) for every x 2 v (d). if f(x) = g(x) = 1 for every x, then a connected (g; f)-factor is a hamiltonian cycle. the previous research related to the topic has been carried out either for (g; f)-factors (in general, disconnected) or for hamiltonian cycles separately, even though numerous similarities between them have been recently detected. here we consider connected (g; f)-factors in digraphs and show that several results on hamiltonian digraphs, which are generalizations of tournaments, can be extended to connected (g; f )-factors. applications of these results to supereulerian digraphs are also obtained. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_20393",
        "graph": {
            "node_idx": 20393,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20393
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: on the relationship between combinatorial and lp-based approaches to np-hard scheduling problems (extended abstract)enumerative approaches, such as branch-and-bound, to solving optimization problems require a subroutine that produces a lower bound on the value of the optimal solution. in the domain of scheduling problems the requisite lower bound has typically been derived from either the solution to a linear-programming relaxation of the problem or the solution of a combinatorial relaxation. in this paper we investigate, from both a theoretical and practical perspective, the relationship between several linear-programming based lower bounds and combinatorial lower bounds for two scheduling problems in which the goal is to minimize the average weighted completion time of the jobs scheduled. we establish a number of facts about the relationship between these different sorts of lower bounds, including the equivalence of certain linear-programming-based lower bounds for both of these problems to combinatorial lower bounds used in successful branch-and-bound algorithms. as a result we obtain the first worst-case analysis of the quality of the lower bound delivered by these combinatorial relaxations. we then give an empirical evaluation of the strength of the various lower bounds and heuristics. this extends and puts in a broader context a recent experimental evaluation by savelsbergh and the authors of the empirical strength of both heuristics and lower bounds based on different lp-relaxations of a single-machine scheduling problem. we observe that on most kinds of synthetic data used in experimental studies a simple heuristic, used in successful combinatorial branch-and-bound algorithms for the problem, outperforms on average all of the lp-based heuristics. however, we identify other classes of problems on which the lp-based heuristics are superior, and report on experiments that give a qualitative sense of the range of dominance of each. finally, we consider the impact of local improvement on the solutions. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_20415",
        "graph": {
            "node_idx": 20415,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20415
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: xsb a system for efficiently computing well founded semantics a full prolog system that closelythe well-founded model provides a natural and robust semantics for logic programs with negative literals in rule bodies. we implemented the well-founded semantics in the slg-wam of xsb. performance results indicate that the overhead of delay and simplification to prolog | or tabled | evaluations is minimal. to compute the well-founded semantics, the slg-wam adds to an efficient tabling engine three operations | negative loop detection, delay and simplification | which serve to detect, to break and to resolve the cycles through negation that arise in evaluating normal programs \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_20821",
        "graph": {
            "node_idx": 20821,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20821
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: rates of convergence of stochastically monotone and continuous time markov modelsin this paper we give bounds on the total variation distance from convergence of a continuous time positive recurrent markov process on an arbitrary state space, based on foster-lyapunov drift and minorisation conditions. considerably improved bounds are given in the stochastically monotone case, for both discrete and continuous time models, even in the absence of a reachable minimal element. these results are applied to storage models and to diffusion processes. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_20929",
        "graph": {
            "node_idx": 20929,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                20929
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: beyond n-grams: can linguistic sophistication improve language modeling?it seems obvious that a successful model of natural language would incorporate a great deal of both linguistic and world knowledge. interestingly, state of the art language models for speech recognition are based on a very crude linguistic model, namely conditioning the probability of a word on a small fixed number of preceding words. despite many attempts to incorporate more sophisticated information into the models, the n-gram model remains the state of the art, used in virtually all speech recognition systems. in this paper we address the question of whether there is hope in improving language modeling by incorporating more sophisticated linguistic and world knowledge, or whether the n-grams are already capturing the majority of the information that can be employed. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_21078",
        "graph": {
            "node_idx": 21078,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21078
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: fast partitioning l-apex graphs with applications to approximating maximum induced-subgraph problemsa graph is l-apex if it can be made planar by removing at most l vertices. in this paper we show that the vertex set of any graph not containing an l-apex graph as a minor can be quickly partitioned into 2 l sets inducing graphs with small treewidth. as a consequence, several maximum induced-subgraph problems when restricted to graph classes not containing some special l-apex graphs as minors, have practical approximation algorithms. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, games and search"
            }
        ]
    },
    {
        "id": "cora_test_21105",
        "graph": {
            "node_idx": 21105,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21105
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: recovery of nonmonotonic theorieswe present a framework for recovery of nonmonotonic theories, i.e. of theories that are interpreted using a nonmonotonic semantics. recovery of a nonmono-tonic theory is needed if it does not have a model under the given nonmonotonic semantics, i.e. if the theory is non-monotonically inconsistent. with classical theories, inconsistency can only be removed by contracting the current theory; for nonmonotonic databases, however, it is in general unclear how to restore the consistency of a theory: indeed, several options for recovery that use (mixtures of) contractions and expansions have been proposed in the literature. in this paper, we propose a more fundamental approach to study the recovery problem by stating some rationality postulates for recovery. in these postulates we assume that, when recovering a theory t with respect to some intended semantics, one can fall back on a weaker, so called back-up semantics for t . based on these rationality postulates, our general conclusion is that, in most cases, contraction is not adequate to handle nontrivial recovery problems in nonmonotonic theories. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_21153",
        "graph": {
            "node_idx": 21153,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21153
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: logic control revisited: an abstract interpreter for godel programs1 we develop a simple interpreter for programs of the new logic \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_21161",
        "graph": {
            "node_idx": 21161,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21161
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a structured presentation of a closure-based compilation method for a scoping notion in logic programmingwe present a systematic reconstruction of a compilation method for an extension to logic programming that permits procedure definitions to be given a scope. at a logical level, this possibility is realized by permitting implications to be embedded in goals. program clauses that appear in the antecedents of such implications may contain variables that are bound by external quantifiers, leading to non-local variables in procedure declarations. in compiling programs in this extended language, there is, therefore, a need to consider the addition to given programs of program clauses that are parameterized by bindings for some of their variables. a proposed approach to dealing with this aspect uses a closure representation for clauses. this representation separates an instance of a clause with parameterized bindings into a skeleton part that is fixed at compile-time and an environment that maintains the part that is dynamically determined. a development of this implementation scheme is provided here by starting with an abstract interpreter for the language and then refining this to arrive at an interpreter that uses the closure representation for clauses. the abstract state machine formalism of gurevich is used in specifying the interpreters that are of interest at the two different stages. we also justify this refinement by showing that the essential notion of a computation is preserved by the refinement and thus the refinement is a correct one. key words: logic programming, embedded implication, scoping, closure, compilation \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_21336",
        "graph": {
            "node_idx": 21336,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21336
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a. brogi et al. the logic of totally and partially ordered plans 36 [33] d.s.23] j. mccarthy. applications of circumsription to formalising common sense reasoning. arti ficial intelligence, 26:89-116, 1986. [24] d. mcdermott. a temporal logic for reasoning about processes and plans. cognitive science, 6:101-155, 1982. [25] j. pinto and r. reiter. temporal reasoning in logic programming: a case for the situation calculus. in proc. 1993 intl. conf. on logic programming, pages 203-221. mit press, 1993. [26] t. przymusinski. on the declarative and procedural semantics of stratified deductive databases. in j. minker, editor, foundations of deductive databases and logic program ming, pages 193-216. morgan kaufmann, 1988. [27] d. sacca and c. zaniolo. stable models and non-determinism in logic programs with nega tion. in proc. 9th acm symp. on principles of database systems, 1990. [28] e. sacerdoti. the nonlinear nature of plans. in proceedings of the international joint con ference on artificial intelligence (ijcai-75), pages 206-214, 1975. [29] v.s. subrahmanian and c. zaniolo. relating stable models and ai planning domains. in procs., 12th international conference on logic programming, iclp'95, 1995. [30] a. tate. generating project networks. in proceedings of the international joint conference on artificial intelligence (ijcai-77), pages 889-900, 1977. [31] jayen vaghani, kotagiri ramamohanarao, david b. kemp, zoltan somogyi, peter j. stuckey, tim s. leask, and james harland. the aditi deductive database system. vldb journal, 3:245-288, 1994. [32] d.h.d. warren. an abstract prolog instruction set. technical report, sri international, \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_21422",
        "graph": {
            "node_idx": 21422,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21422
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: efficient implementation of multi-methods through static analysissome of the benefits of object-oriented programming such as extensibility and reusability are fundamentally based on inheritance and late binding. dynamic dispatching is not only time consuming but it also prevents the usage of some optimization techniques such as inlining or interprocedural analysis. the situation is even more severe for languages supporting multi-methods, where dispatching is not only performed based on the type of the receiver, but also based on the types of the arguments. the most efficient way to perform dynamic dispatching is to avoid it as often as possible, without restricting the use of multi-methods. in this paper it is shown how this goal can be achieved through static analysis. we present a technique which discards all method calls which can be statically bound. furthermore, even if a method cannot be statically bound, we derive information which will at run time speed up the dispatching process considerably. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_21464",
        "graph": {
            "node_idx": 21464,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21464
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: computational auditory scene analysis exploiting speech-recognition knowledgethe field of computational auditory scene analysis (casa) strives to build computer models of the human ability to interpret sound mixtures as the combination of distinct sources. a major obstacle to this enterprise is defining and incorporating the kind of high level knowledge of real-world signal structure exploited by listeners. speech recognition, while typically ignoring the problem of nonspeech inclusions, has been very successful at deriving powerful statistical models of speech structure from training data. in this paper, we describe a scene analysis system that includes both speech and nonspeech components, addressing the problem of working backwards from speech recognizer output to estimate the speech component of a mixture. ultimately , such hybrid approaches will require more radical adaptation of current speech recognition approaches. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_21487",
        "graph": {
            "node_idx": 21487,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21487
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: unification grammars and semantics within the berkeley restaurant projectin this paper we describe our cs 288 class project, implementation of a unification parser within the berke-ley restaurant project. the system is a work in progress; what is described here is a snapshot of the current system. we also present several ideas for improvements we have had while working on the project. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_21499",
        "graph": {
            "node_idx": 21499,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21499
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: acoustic modeling in continuous speech recognition a connectionist approachwe are currently studying acoustic models for continuous speech recognition. these models represent the stochastic generation of feature vectors for an utterance, where a feature vector represents a short interval of speech, typically around 20ms. our current emphasis is on devising stochastic models that overcome some of the principal limitations of hidden markov models (hmms). some of these limitations include an inability to model non-stationarities within a speech segment, assumed independence between acoustic vectors within a state, and lack of local discrimination between similar sounds. our work is related to that of a number of researchers who are attempting to overcome these limitations. like a number of these researchers, we are interested in non-stationary modeling within a segment corresponding to a general speech category (e.g., phoneme). our work differs in that we are considering stochastic models that use a posteriori probabilities, which are generated by a multi-layer perceptron (mlp). in one study, we have modeled the dynamics within a speech segment using temporal position as an explicit variable. this time index model explicitly conditions the emission probability of a state on the time index, where time index is defined as the number of frames since entering a state until the current frame. the lesson from the pilot experiments is that the approach can greatly reduce error if we have good information about the phoneme boundary location. currently we are experimenting with other discriminant models. we report here on the limitations and theoretical solutions, and suggest a line of research to investigate their practicality. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_21717",
        "graph": {
            "node_idx": 21717,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21717
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: type inference with simple selftypes is np-completethe metavariable self is fundamental in object-oriented languages. typing self in the presence of inheritance has been studied by abadi and cardelli, bruce, and others. a key concept in these developments is the notion of selftype, which enables flexible type annotations that are impossible with recursive types and subtyping. bruce et al. demonstrated that, for the language toople, type checking is decidable. open until now is the problem of type inference with selftype. in this paper we present a simple type system with selftype, recursive types, and subtyping, and we prove that type inference is np-complete. with recursive types and subtyping alone, type inference is known to be p-complete. our example language is the object calculus of abadi and cardelli. both our type inference algorithm and our lower bound are the first such results for a type system with selftype. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_21850",
        "graph": {
            "node_idx": 21850,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21850
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: coerced markov models for cross-lingual lexical-tag relationssummary we introduce the coerced markov model (cmm) to model the relationship between the lexical sequence of a source language and the tag sequence of a target language, with the objective of constraining search in statistical transfer-based machine translation systems. cmms differ from hidden markov models in that state sequence assignments can take on values coerced from external sources. given a chinese sentence, a cmm can be used to predict the corresponding english tag sequence, thus constraining the english lexical sequence produced by a translation model. the cmm can also be used to score competing translation hypotheses in n-best models. three fundamental problems for cmm designed are discussed. their solutions lead to the training and testing stages of cmm. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_21883",
        "graph": {
            "node_idx": 21883,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21883
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: an architectural framework for object management systems (area paper)much research has been done in the last decade in the closely related areas of object-oriented programming languages and databases. both areas now seem to be working toward a common end, that of an object management system, or oms. an oms is constructed similarly to an oodb but provides a general purpose concurrent object oriented programming language as well, sharing the object base with the oodb query facilities. in this paper, we will define several different types of object systems (object servers, persistent oopl's, oodb's and oms's) in terms of their interfaces and capabilities. we will examine the distinguishing features and general architecture of systems of each type in the light of a general model of oms architecture. popovich is supported in part by nasa grant ngt 50583. the programming systems laboratory is supported by national science foundation grants ccr-9000930 and ccr-8858029, by grants from at&t, bnr, dec and sra, by the new york state center for advanced technology in computers and information systems and by the nsf engineering research center for telecommunications research. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_21951",
        "graph": {
            "node_idx": 21951,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                21951
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: towards alias-free pointersthis paper argues that pointer-induced aliasing can be avoided in many cases by means of a concept of unique pointer. the use of such pointers is expected to fortify the concept of encapsulation, to make systems easier to reason about, to provide better control over the interaction between threads, and to make storage management safer and more efficient. we show that unique pointers can be implemented by means of few minor and virtually costless modifications in conventional oo languages, such as eiffel or c++; and that they can be used conveniently in a broad range of algorithms and data structures. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_22309",
        "graph": {
            "node_idx": 22309,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                22309
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: creating speaker-specific phonetic templates with a speaker-independent phonetic recognizer: implications for voice dialingwe present a new approach to speaker dependent template generation which uses dramatically less storage to represent a speaker's words, with minimal degradation in recognition accuracy. in this approach, the symbolic string produced by a speaker-independent phonetic recognizer is used to represent utterances. we investigate effective procedures for template generation, and compare the results of these procedures to templates represented by acoustic parameters for utterances produced with different telephone handsets. the use of speaker-specific templates led to a reduction of about 1:500 in data-storage requirements with comparable recognition accuracy. in also compare recognition performance for speaker-specific and speaker-independent templates, and for combinations of the two. the results showed that combining speaker-specific and speaker-independent templates produces better recognition performance than either alone. a voice dialing system is described which incorporates the speaker-specific templates. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_22332",
        "graph": {
            "node_idx": 22332,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                22332
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: efficient estimation of perceptual features for speech recognitiona number of studies have shown that a pair of perceptual effective formants can be defined to capture most of the phonetic information present in vowels. various methods of computing the effective formant values were proposed. however, many of them depend on the accuracy of conventional formant estimation. in this work, we study methods of automatically estimating perceptual effective formants without estimating the actual formant values and compare the results with the perceptually measured effective formant values. the preliminary results show that the method is effective in estimating the perceptual effective formants. classification experiments using perceptual effective formants as explicit features do not demonstrate any advantages. however, using the perceptual effective second formant value as input to our formant estimation algorithm can help to correct up to 44% of the formant tracking errors. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_22354",
        "graph": {
            "node_idx": 22354,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                22354
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: detecting an imposter in telephone speechthis paper presents initial results on imposter detection in telephone speech. the imposter detector problem is defined in terms of a real-world security problem. perceptual studies are then presented. these studies present a good estimate on the difficulty of the task at hand; it is found that humans classify approximately 85.6% of our benchmark utterances correctly. to design an automatic imposter detector, features which elicit speaker differences are studied. a baseline system based only on 20'th order linear predictive coefficients (lpc) classifies 75.0% of the test set correctly. by extracting features only in vowel and semi-vowel regions, i.e. where the all-pole model of the linear predictor is most accurate, the classification performance is increased to 80.0%. further features such as average energy and median pitch result in a correct classification rate of 83.7%, comparable to the perceptual benchmarks. results are also presented for mandarin, japanese and spanish. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_22471",
        "graph": {
            "node_idx": 22471,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                22471
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: access region expansion in the concert compilerconcurrent object oriented programming introduces significant challenges for a compiler. we examine one of these challenges, access region expansion, from two perspectives; compiler runtime performance and quality of access region expansion. the work was done within the concert compiler framework. we found that with clever modifications the compiler runtime performance could be significantly improved ( 4x). we also found that while there are inherent limitations to the quality of access region expansion, our implementation is overly restrictive. we conclude that further work in this topic needs to be done to fully understand the problem and define an optimal solution. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_22487",
        "graph": {
            "node_idx": 22487,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                22487
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: a modular approach for programming distributed real-time systemsfl the research described has been made possible in part by support from the office of naval research (onr contract numbers n00014-90-j-1899 and n00014-93-1-0273), by an incentives for excellence award from the digital equipment corporation faculty program, by hitachi, and by the national science foundation (nsf ccr 93-12495). \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_22488",
        "graph": {
            "node_idx": 22488,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                22488
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: modular development of distributed software draft: do not circulate or citewith increased interconnectivity, distributed systems have become central to computing. software executing on distributed systems consists of many asynchronous, autonomous components which need to interact with each other in order to coordinate local activity. the need for such coordination, as well as requirements such as heterogeneity, scalability, security and availability, considerably increase the complexity of code in distributed systems. moreover, changing requirements, as well as changes in hardware platforms, lead to software that is constantly evolving. we are developing a programming methodology to simplify the design, implementation and maintenance of complex distributed systems. two key ideas inspire our methodology. first, distributed systems may be separated into a collection of components carrying out computations locally and a collection of policies describing interactions between groups of components. such interaction policies provide the glue between components (figure 1). second, generic design concerns such as availability, consistency, and security can be represented as application independent protocols which are composed with applications to meet particular requirements. we achieve the desired separation of interaction policies and application components by separating the policies from the mechanisms that are used to implement them. an interaction policy corresponds to the interface of a protocol; the mechanisms used to implement it are its representation. a protocol representation is in terms of a meta-architecture which by design provides a degree of independence from the application level components. encapsulating a protocol representation in an abstraction boundary is in the spirit of abstract data types. much as object-oriented programming realizes abstract data types by enabling the publication of a component's interface while hiding its implementation, protocol abstractions present an interface representing the interaction policy while hiding the details of the coordination mechanisms used to implement the policy. observe that an \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_24196",
        "graph": {
            "node_idx": 24196,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                24196
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: abstractdynamic dispatching is a major source of runtime overhead in objectoriented languages, due both to the direct cost of method lookup and to the indirect effect of preventing other optimizations. to reduce this overhead, optimizing compilers for objectoriented languages analyze the classes of objects stored in program variables, with the goal of bounding the possible classes of message receivers enough so that the compiler can uniquely determine the tar get of a message send at compile time and replace the message send with a direct procedure call. specialization is one important technique for improving the precision of this static class information: by compiling multiple versions of a method, each applicable to a subset of the possible ar gument classes of the method, more precise static information about the classes of the methods arguments is obtained. previous specialization strategies have not been selective about where this technique is applied, and therefore tended to significantly increase compile time and code space usage, particularly for lar ge applications. in this paper, we present a more general framework for specialization in objectoriented languages and describe a goal- directed specialization algorithm that makes selective decisions to apply specialization to those cases where it provides the highest benefit. our results show that our algorithm improves the performance of a group of sizeable programs by 65% to 275% while increasing compiled code space requirements by only 4% to 10%. moreover, when compared to the previous state-of-the-art specialization scheme, our algorithm improves performance by 11% to 67% while simultaneously reducing code space requirements by 65% to 73%. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_24242",
        "graph": {
            "node_idx": 24242,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                24242
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: abstractin this paper we explore the notion of a \"signing\" of a logic program, in the framework of the answer set semantics. in particular, we generalize and extend the notion of a signing, and show that even for programs with classical negation and disjunction the existence of a signing is a simple syntactic criterion that can guarantee several different sorts of good behavior: consistency, coincidence of consequences under answer set and well-founded semantics, existence of \"standard\" answer sets expressible in terms of the well-founded model and a signing for the program, and a restricted monotonicity property. the key technical result in this paper is a theorem relating the consequences of a signed disjunctive program with classical negation to the consequences of the members of a closely related family of signed nondisjunc-tive programs. these nondisjunctive programs are the \"covers\" of the disjunctive program, where a cover is any program that can be obtained by removing all but one literal from the head of each rule in the disjunctive program. to illustrate the usefulness of these results, we apply them to a family of programs for reasoning about action. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_24250",
        "graph": {
            "node_idx": 24250,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                24250
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: minimizing power dissipation in scan circuits during test applicationthis paper presents a speech-enabled www demonstration based on the air travel information system (atis) domain. sris speech recognition technology and natural language understanding are fully integrated in a java application using the decipher speech recognition system and the open agent architecture. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "artificial intelligence, speech"
            }
        ]
    },
    {
        "id": "cora_test_24293",
        "graph": {
            "node_idx": 24293,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                24293
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: on the adjoint matrixobject-oriented frameworks must be equipped with appropriate documentation; otherwise application developers will be forced to go through the code of the framework they are using in order to see how to use it, thereby minimizing the advantages of frameworks. we point out the need for a new approach to the specification of the behavior of frameworks, outline a possible approach, and briefly consider how an application developer can combine a framework specification of the type proposed with appropriate information about the code he supplies to arrive at a specification of his particular application. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    },
    {
        "id": "cora_test_24324",
        "graph": {
            "node_idx": 24324,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                24324
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: abstractthis paper presents mathematical results that can sometimes be used to simplify the task of reasoning about a default theory, by \"splitting it into parts.\" these so-called splitting theorems for default logic are related in spirit to \"partial evaluation\" in logic programming, in which results obtained from one part of a program are used to simplify the remainder of the program. in this paper we focus primarily on the statement and proof of the splitting theorems for default logic. we illustrate the usefulness of the results by applying them to an example default theory for commonsense reasoning about action. \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, logic"
            }
        ]
    },
    {
        "id": "cora_test_24425",
        "graph": {
            "node_idx": 24425,
            "edge_index": [
                [],
                []
            ],
            "node_list": [
                24425
            ]
        },
        "conversations": [
            {
                "from": "human",
                "value": "Given a citation graph: \n<graph>\nwhere the 0th node is the target paper, and other nodes are its one-hop or multi-hop neighbors, with the following information: \nAbstract: distributed and scalable anisomorphic geometric simplification category: research/systems; format: spoofspecifications are useful because they allow reasoning about objects without concern for their implementations. type hierarchies are useful because they allow types that share common properties to be designed as a family. this paper is concerned with the interaction between specifications and type specifications and their use in defining subtypes hierarchies. we present a way of specifying types, and show how some extra information, in addition to specifications of the objects' methods, is needed to support reasoning. we also provide a new way of showing that one type is a subtype of another. our technique makes use of information in the types' specifications and works even in a very general computational environment in which possibly concurrent barbara liskov jeannette m. wing users share mutable objects. massachusetts institute of technology school of computer science laboratory for computer science carnegie mellon university 1. introduction \n Question: Which of the following subcategories of computer science does this paper belong to: 1. operating systems, memory management 2. artificial intelligence, planning 3. artificial intelligence, vision and pattern recognition 4. artificial intelligence, machine learning, case-based 5. artificial intelligence, agents 6. artificial intelligence, machine learning, probabilistic methods 7. operating systems, distributed 8. artificial intelligence, machine learning, genetic algorithms 9. human computer interaction, graphics and virtual reality 10. programming, object oriented 11. encryption and compression, encryption 12. networking, protocols 13.  programming, software development 14. programming, compiler design 15. artificial intelligence, machine learning, theory 16. artificial intelligence, machine learning, neural networks 17. programming, logic 18. operating systems, realtime 19. artificial intelligence, speech 20. artificial intelligence, robotics 21. artificial intelligence, games and search ? Directly give the full name of the most likely category of this paper. "
            },
            {
                "from": "gpt",
                "value": "programming, object oriented"
            }
        ]
    }
]